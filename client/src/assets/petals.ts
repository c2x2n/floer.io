import { AssetsBunch } from "./assets";
import { P2 } from "../../../common/src/maths/constants";
import { loadPathFromSVG } from "./pathLoader";
import { strokeColor } from "../../../common/src/misc/colors";

export const petalAssets: AssetsBunch = {
    "basic": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.beginPath();

        ctx.fillStyle = containerToDraw.getRenderColor("#FFFFFF");
        ctx.lineWidth = radius / 3;
        ctx.strokeStyle = containerToDraw.getRenderColor("#CFCFCF");

        ctx.arc(0, 0, radius, 0, Math.PI * 2);
        ctx.fill();
        ctx.stroke();
    },
    "yinyang": containerToDraw => {
        loadPathFromSVG({
            containerToDraw,
            pathS: "m 188.88881,99.9995 q 0,2.17777 -0.10371,4.36073 -0.10889,2.17777 -0.32667,4.35554 -0.2126,2.16739 -0.53408,4.32442 -0.31631,2.16222 -0.74669,4.30369 -0.42519,2.13629 -0.95409,4.25184 -0.5289,2.12073 -1.1615,4.20517 -0.63261,2.08444 -1.36892,4.14813 -0.73631,2.05333 -1.57114,4.06517 -0.83483,2.02222 -1.76819,3.99258 -0.93335,1.97036 -1.96003,3.89406 -1.03188,1.9237 -2.1519,3.79554 -1.12002,1.87185 -2.33338,3.68666 -1.21336,1.8148 -2.51486,3.56739 -1.30151,1.75259 -2.6808,3.43777 -1.37928,1.68518 -2.85191,3.30813 -1.47262,1.62296 -3.00746,3.15777 -1.53485,1.53481 -3.16303,3.0074 -1.62818,1.47258 -3.30303,2.85184 -1.67485,1.37925 -3.43785,2.68073 -1.76299,1.30147 -3.56747,2.5148 -1.80448,1.21333 -3.68156,2.33333 -1.87707,1.11999 -3.80082,2.15184 -1.92374,1.03185 -3.89415,1.96 -1.97041,0.93333 -3.99267,1.76814 -2.01708,0.83481 -4.07045,1.5711 -2.05338,0.7363 -4.14305,1.36889 -2.08967,0.63259 -4.20008,1.16147 -2.11041,0.52889 -4.26231,0.95926 -2.15189,0.43037 -4.2986,0.74148 -2.14671,0.31111 -4.32972,0.53407 -2.183,0.22296 -4.35045,0.32148 -2.16746,0.0985 -4.360832,0.10889 -2.177822,0 -4.360828,-0.1037 -2.177821,-0.10371 -4.355642,-0.32148 -2.167451,-0.20741 -4.324531,-0.53408 -2.162265,-0.31629 -4.30379,-0.74148 -2.136339,-0.42518 -4.251936,-0.95925 -2.120783,-0.52889 -4.205269,-1.16148 -2.084486,-0.63259 -4.148231,-1.36888 -2.048189,-0.7363 -4.065266,-1.57111 -2.022263,-0.83481 -3.992673,-1.76295 -1.970409,-0.92815 -3.894151,-1.97037 -1.923742,-1.02666 -3.795632,-2.14666 -1.871889,-1.11999 -3.68674,-2.33332 -1.814851,-1.21333 -3.567479,-2.51481 -1.752627,-1.29629 -3.437846,-2.68073 -1.690404,-1.38444 -3.303029,-2.85184 -1.61781,-1.4674 -3.163026,-3.0074 -1.540031,-1.54518 -3.007467,-3.16295 -1.467437,-1.61258 -2.851909,-3.30295 -1.384472,-1.68518 -2.680794,-3.43776 -1.296322,-1.75259 -2.514865,-3.5674 -1.218543,-1.81481 -2.33338,-3.68147 -1.114837,-1.86666 -2.151895,-3.80072 -1.037058,-1.93407 -1.960039,-3.89406 -0.922981,-1.96 -1.768183,-3.99258 -0.845202,-2.03259 -1.571143,-4.07036 -0.72594,-2.03777 -1.368916,-4.14295 -0.642976,-2.10517 -1.161505,-4.19998 -0.518528,-2.09481 -0.954093,-4.26221 -0.435564,-2.1674 -0.746681,-4.2985 -0.311118,-2.1311 -0.534085,-4.32961 -0.222967,-2.19852 -0.321488,-4.35036 -0.09852,-2.15184 -0.103706,-4.35554 0,-2.18814 0.103706,-4.36591 0.103706,-2.17777 0.321488,-4.355539 0.212597,-2.1674 0.534085,-4.324429 0.316302,-2.162215 0.746681,-4.303689 0.425194,-2.136288 0.954093,-4.251836 0.5289,-2.115548 1.161505,-4.20517 0.632605,-2.089622 1.368916,-4.148133 0.736311,-2.048141 1.571143,-4.065171 0.834831,-2.01703 1.768183,-3.992578 0.933352,-1.975548 1.960039,-3.89406 1.031873,-1.923697 2.151895,-3.795542 1.120022,-1.871845 2.33338,-3.681469 1.213357,-1.809623 2.514865,-3.572579 1.301507,-1.762957 2.680794,-3.437766 1.379287,-1.674809 2.851909,-3.302951 1.472622,-1.628142 3.007467,-3.162951 1.534845,-1.53481 3.163026,-3.007397 1.628181,-1.472587 3.303029,-2.851842 1.674848,-1.379254 3.437846,-2.680731 1.762998,-1.301476 3.567479,-2.514805 1.804481,-1.213329 3.681555,-2.333325 1.877075,-1.119996 3.800817,-2.151844 1.923742,-1.031849 3.894151,-1.959993 1.97041,-0.93333 3.992673,-1.762957 2.017077,-0.839997 4.070451,-1.576291 2.053374,-0.731108 4.143046,-1.368884 2.084486,-0.63259 4.200083,-1.161477 2.115598,-0.528887 4.262308,-0.954071 2.146709,-0.425183 4.298604,-0.746664 2.151895,-0.32148 4.329716,-0.534072 2.177821,-0.212591 4.350457,-0.32148 2.177821,-0.103703 4.360828,-0.103703 2.177822,0 4.360832,0.103703 2.17782,0.103703 4.35564,0.32148 2.16745,0.212592 4.32453,0.534072 2.16226,0.321481 4.30379,0.746664 2.13634,0.425184 4.25193,0.954071 2.12079,0.528887 4.20527,1.161477 2.08449,0.632591 4.14823,1.368884 2.04819,0.736294 4.06527,1.571106 2.02226,0.834812 3.99267,1.768142 1.97041,0.93333 3.89415,1.959993 1.92375,1.031848 3.79564,2.151844 1.87188,1.125181 3.68674,2.333325 1.81485,1.213329 3.56747,2.514805 1.75263,1.296292 3.43785,2.685917 1.6904,1.379254 3.30303,2.851841 1.61781,1.462217 3.16303,3.007397 1.54003,1.539994 3.00746,3.157766 1.46744,1.612587 2.85191,3.302951 1.38447,1.685179 2.6808,3.437766 1.29632,1.752586 2.51486,3.567394 1.21854,1.814809 2.33338,3.681469 1.11484,1.86666 2.1519,3.800727 1.03705,1.934067 1.96003,3.899245 0.92299,1.965178 1.76819,3.987393 0.8452,2.022215 1.57114,4.070356 0.72594,2.048141 1.36892,4.142948 0.64297,2.094807 1.1615,4.199985 0.51853,2.105177 0.95409,4.262207 0.43557,2.157029 0.74669,4.298503 0.31111,2.141473 0.53408,4.329614 0.22297,2.18814 0.32149,4.350354 0.0985,2.162215 0.1037,4.36073",
            fill: "#ffffff"
        });

        loadPathFromSVG({
            containerToDraw,
            pathS: "m 99.997408,11.11019 q 2.177822,0 4.360832,0.108889 2.17782,0.103703 4.35564,0.32148 2.16745,0.212592 4.32453,0.534072 2.16226,0.321481 4.30379,0.746664 2.13634,0.425184 4.25193,0.954071 2.12079,0.528887 4.20527,1.161477 2.08449,0.632591 4.14823,1.368884 2.04819,0.736294 4.06527,1.571106 2.02226,0.834811 3.99267,1.768141 1.97041,0.93333 3.89415,1.959993 1.92375,1.031848 3.79564,2.151844 1.87188,1.125182 3.68674,2.333325 1.81485,1.213329 3.56747,2.514806 1.75263,1.296292 3.43785,2.685916 1.6904,1.379255 3.30303,2.851842 1.61781,1.462217 3.16303,3.007397 1.54003,1.539994 3.00746,3.157766 1.46744,1.612587 2.85191,3.302951 1.38447,1.685179 2.6808,3.437765 1.29632,1.752587 2.51486,3.567395 1.21854,1.814809 2.33338,3.681469 1.11484,1.86666 2.1519,3.800727 1.03705,1.934067 1.96003,3.899245 0.92299,1.965178 1.76819,3.987393 0.8452,2.022215 1.57114,4.070356 0.72594,2.04814 1.36892,4.142948 0.64297,2.094807 1.1615,4.199985 0.51853,2.105177 0.95409,4.262206 0.43557,2.15703 0.74669,4.298503 0.31111,2.141474 0.53408,4.329615 0.22297,2.18814 0.32149,4.350354 0.0985,2.162215 0.1037,4.360725 0.005,2.19851 -0.1037,4.36073 -0.10371,2.17777 -0.32149,4.35554 -0.2126,2.16739 -0.53408,4.32442 -0.31631,2.16222 -0.74669,4.30369 -0.42519,2.13629 -0.95409,4.25184 -0.5289,2.12073 -1.1615,4.20517 -0.63261,2.08444 -1.36892,4.14813 -0.73631,2.05333 -1.57114,4.06517 -0.83483,2.02222 -1.76819,3.99258 -0.93335,1.97036 -1.96003,3.89406 -1.03188,1.9237 -2.1519,3.79554 -1.12002,1.87185 -2.33338,3.68666 -1.21336,1.8148 -2.51486,3.56739 -1.30151,1.75259 -2.6808,3.43777 -1.37928,1.68518 -2.85191,3.30813 -1.47262,1.62296 -3.00746,3.15777 -1.53485,1.53481 -3.16303,3.0074 -1.62818,1.47258 -3.30303,2.85184 -1.67485,1.37925 -3.43785,2.68073 -1.76299,1.30147 -3.56747,2.5148 -1.80448,1.21333 -3.68156,2.33333 -1.87707,1.11999 -3.80082,2.15184 -1.92374,1.03185 -3.89415,1.96 -1.97041,0.93333 -3.99267,1.76814 -2.01708,0.83481 -4.07045,1.5711 -2.05338,0.7363 -4.14305,1.36889 -2.08967,0.63259 -4.20008,1.16147 -2.11041,0.52889 -4.26231,0.95926 -2.15189,0.43037 -4.2986,0.74148 -2.14671,0.31111 -4.32972,0.53407 -2.183,0.22296 -4.35045,0.32148 -2.16746,0.0985 -4.360832,0.10889",
            fill: "#333333"
        });

        loadPathFromSVG({
            containerToDraw,
            pathS: "m 144.44052,144.44675 q 0,1.08888 -0.0519,2.17777 -0.0518,1.08888 -0.15556,2.17777 -0.10889,1.08888 -0.26963,2.16221 -0.16074,1.07852 -0.37334,2.15185 -0.2126,1.06814 -0.47705,2.12591 -0.26963,1.05778 -0.58594,2.10518 -0.31111,1.04222 -0.68445,2.07407 -0.36297,1.02148 -0.78298,2.03258 -0.41483,1.00593 -0.8815,1.99111 -0.46668,0.98518 -0.98521,1.94962 -0.51852,0.96444 -1.07335,1.89777 -0.55483,0.93333 -1.16669,1.84592 -0.61186,0.91259 -1.25484,1.7837 -0.64298,0.87111 -1.34818,1.71629 -0.70519,0.84518 -1.42076,1.65407 -0.71557,0.80888 -1.50374,1.57629 -0.77261,0.77777 -1.58151,1.50369 -0.80891,0.7363 -1.64892,1.42593 -0.84521,0.69481 -1.72152,1.34814 -0.87631,0.64814 -1.78374,1.24962 -0.90742,0.60667 -1.84078,1.17185 -0.93335,0.56 -1.89781,1.07333 -0.96446,0.51852 -1.94967,0.98 -0.9852,0.46666 -1.99634,0.88148 -1.00594,0.41481 -2.03263,0.78814 -1.02669,0.36296 -2.07411,0.68444 -1.04225,0.31111 -2.10005,0.58074 -1.0578,0.26445 -2.12596,0.47704 -1.07336,0.21259 -2.1519,0.37333 -1.07854,0.16074 -2.16745,0.26963 -1.08891,0.10889 -2.17782,0.15555 -1.08891,0.0467 -2.177822,0.057 -1.088911,0 -2.177822,-0.0519 -1.08891,-0.0519 -2.177821,-0.15556 -1.08891,-0.1037 -2.16745,-0.26963 -1.07854,-0.15555 -2.14671,-0.37333 -1.073355,-0.2074 -2.125968,-0.47703 -1.062984,-0.26445 -2.105227,-0.58074 -1.042243,-0.3163 -2.074116,-0.68444 -1.026687,-0.36815 -2.032633,-0.78296 -1.011131,-0.42 -1.996336,-0.88667 -0.985205,-0.46666 -1.949669,-0.98518 -0.959278,-0.50815 -1.897815,-1.06814 -0.933352,-0.56519 -1.840778,-1.17185 -0.907425,-0.60148 -1.783739,-1.25481 -0.876314,-0.64815 -1.721516,-1.34296 -0.840016,-0.68963 -1.648921,-1.42073 -0.808905,-0.73111 -1.581513,-1.5037 -0.772608,-0.77778 -1.503734,-1.58148 -0.731126,-0.80888 -1.425954,-1.65407 -0.689644,-0.83999 -1.34299,-1.71629 -0.648161,-0.88148 -1.25484,-1.78369 -0.606679,-0.90741 -1.16669,-1.84592 -0.560011,-0.93333 -1.073355,-1.89777 -0.518529,-0.96445 -0.985205,-1.94963 -0.466676,-0.98518 -0.881499,-1.9911 -0.414823,-1.01111 -0.782978,-2.03777 -0.368156,-1.02666 -0.684458,-2.07407 -0.316303,-1.03703 -0.585938,-2.09999 -0.259264,-1.05777 -0.477046,-2.12592 -0.207412,-1.07333 -0.373341,-2.15184 -0.155559,-1.07852 -0.26445,-2.16222 -0.103706,-1.08888 -0.160744,-2.17777 -0.05704,-1.08888 -0.05185,-2.17777 0,-1.08888 0.05185,-2.18295 0.05185,-1.08889 0.155559,-2.17777 0.108891,-1.0837 0.269635,-2.16222 0.160744,-1.07851 0.373341,-2.15184 0.212596,-1.07333 0.477046,-2.12592 0.269635,-1.05777 0.585938,-2.10518 0.311117,-1.04222 0.684458,-2.07406 0.36297,-1.02148 0.782978,-2.03259 0.414823,-1.00592 0.881499,-1.9911 0.466676,-0.98518 0.985205,-1.94963 0.518529,-0.96444 1.073355,-1.89777 0.554826,-0.93333 1.16669,-1.84592 0.611864,-0.91258 1.25484,-1.77851 0.642976,-0.86592 1.348175,-1.72147 0.705199,-0.85556 1.420769,-1.65407 0.71557,-0.79852 1.503734,-1.57629 0.772608,-0.77778 1.581513,-1.5037 0.808905,-0.73629 1.648921,-1.42592 0.845202,-0.69481 1.721516,-1.34814 0.876314,-0.64296 1.783739,-1.24963 0.907426,-0.60666 1.840778,-1.16666 0.933352,-0.56518 1.897815,-1.07852 0.964464,-0.51333 1.949669,-0.97999 0.985205,-0.46667 1.996336,-0.88148 1.005946,-0.42 2.032633,-0.78815 1.026687,-0.36814 2.074116,-0.68444 1.042243,-0.31111 2.100042,-0.58074 1.057798,-0.26444 2.125968,-0.47703 1.073355,-0.21259 2.151895,-0.37333 1.07854,-0.16074 2.16745,-0.26963 1.088911,-0.10889 2.177821,-0.15556 1.088911,-0.0467 2.177822,-0.0518 1.088912,0 2.177822,0.0518 1.08891,0.0519 2.17782,0.15556 1.08891,0.10889 2.16745,0.26963 1.07854,0.16074 2.14671,0.37333 1.07335,0.2074 2.12597,0.47703 1.06298,0.26445 2.10523,0.58074 1.04224,0.3163 2.07411,0.68444 1.02669,0.36815 2.03263,0.78815 1.01114,0.41481 1.99634,0.88148 0.98521,0.46666 1.94967,0.98518 0.95928,0.50815 1.89781,1.07333 0.93336,0.56 1.84078,1.16666 0.90743,0.60667 1.78374,1.25481 0.87631,0.64815 1.72152,1.34296 0.84001,0.68963 1.64892,1.42592 0.8089,0.72592 1.58151,1.5037 0.77261,0.7674 1.50374,1.57629 0.73112,0.80889 1.42595,1.65407 0.68964,0.84518 1.34299,1.72147 0.64816,0.8763 1.25484,1.77851 0.60668,0.90222 1.16669,1.84592 0.56001,0.9437 1.07335,1.89777 0.51335,0.95408 0.98521,1.94963 0.47186,0.99555 0.8815,1.9911 0.40964,0.99555 0.78298,2.03777 0.37334,1.04222 0.68445,2.07407 0.31631,1.03703 0.58594,2.09999 0.25927,1.05777 0.47705,2.12592 0.20741,1.07333 0.37334,2.15184 0.15556,1.07852 0.26445,2.16222 0.1037,1.08888 0.16074,2.17777 0.057,1.08888 0.0519,2.17777",
            fill: "#333333"
        });

        loadPathFromSVG({
            containerToDraw,
            pathS: "m 144.44052,55.557438 q 0,1.088885 -0.0519,2.17777 -0.0518,1.088885 -0.15556,2.17777 -0.10889,1.088885 -0.26963,2.162214 -0.16074,1.0837 -0.37334,2.151845 -0.2126,1.068144 -0.47705,2.125918 -0.26445,1.057774 -0.58594,2.105177 -0.32148,1.047404 -0.68445,2.074067 -0.36297,1.021478 -0.78298,2.032585 -0.41483,1.005923 -0.8815,1.991104 -0.46668,0.985182 -0.98521,1.949623 -0.51852,0.964441 -1.07335,1.897771 -0.55483,0.93333 -1.16669,1.845919 -0.61186,0.912589 -1.25484,1.783697 -0.64298,0.871108 -1.34818,1.71629 -0.70519,0.845183 -1.42076,1.654069 -0.71557,0.808886 -1.50374,1.581475 -0.78816,0.77259 -1.58151,1.503699 -0.79335,0.731108 -1.64892,1.420735 -0.85558,0.689627 -1.72152,1.348144 -0.86594,0.658516 -1.78374,1.25481 -0.91779,0.596294 -1.84078,1.166662 -0.92298,0.570369 -1.89781,1.07333 -0.96446,0.518516 -1.94967,0.985181 -0.9852,0.466665 -1.99634,0.881479 -1.00594,0.414813 -2.03263,0.78296 -1.02669,0.368147 -2.07411,0.684442 -1.04743,0.316295 -2.10005,0.580738 -1.05261,0.264444 -2.12596,0.477036 -1.07336,0.212592 -2.1519,0.373332 -1.07854,0.16074 -2.16745,0.269628 -1.08891,0.108889 -2.17782,0.155555 -1.08891,0.04667 -2.177822,0.05704 -1.088911,0 -2.177822,-0.05185 -1.08891,-0.05185 -2.177821,-0.160741 -1.08891,-0.103703 -2.16745,-0.269628 -1.07854,-0.155555 -2.14671,-0.373332 Q 90.25425,98.936541 89.201637,98.666912 88.138653,98.407654 87.09641,98.086174 86.048981,97.769879 85.022294,97.401732 83.995607,97.03877 82.989661,96.618772 81.97853,96.203958 80.993325,95.737293 80.00812,95.270628 79.043656,94.752112 78.084378,94.233595 77.145841,93.678782 76.212489,93.113599 75.305063,92.51212 74.397638,91.905455 73.521324,91.252124 72.64501,90.603979 71.799808,89.909166 70.959792,89.219539 70.150887,88.488431 69.341982,87.757322 68.569374,86.984732 67.796766,86.206957 67.06564,85.403257 q -0.731126,-0.808886 -1.425954,-1.654069 -0.689644,-0.839997 -1.34299,-1.71629 -0.648161,-0.881478 -1.25484,-1.783697 -0.606679,-0.907404 -1.16669,-1.845919 -0.560011,-0.93333 -1.073355,-1.897771 -0.518529,-0.959256 -0.985205,-1.949623 -0.466676,-0.985181 -0.881499,-1.991104 -0.414823,-1.011107 -0.782978,-2.03777 -0.368156,-1.026663 -0.684458,-2.074067 -0.316303,-1.037033 -0.585938,-2.099992 -0.259264,-1.057774 -0.477046,-2.125918 -0.207412,-1.068145 -0.373341,-2.151845 -0.155559,-1.078514 -0.26445,-2.162214 -0.103706,-1.088885 -0.160744,-2.17777 -0.05704,-1.088885 -0.05185,-2.17777 0,-1.088885 0.05185,-2.17777 0.05185,-1.09407 0.155559,-2.17777 0.108891,-1.088885 0.269635,-2.1674 0.160744,-1.078514 0.373341,-2.151844 0.212596,-1.073329 0.477046,-2.125918 0.269635,-1.057774 0.585938,-2.099993 0.311117,-1.047403 0.684458,-2.074066 0.36297,-1.026663 0.782978,-2.032586 0.414823,-1.011107 0.881499,-1.996289 0.466676,-0.985181 0.985205,-1.949622 0.513344,-0.959256 1.073355,-1.897771 0.560011,-0.93333 1.16669,-1.840734 0.606679,-0.907404 1.25484,-1.783698 0.653346,-0.881478 1.348175,-1.721475 0.689643,-0.845182 1.420769,-1.654068 0.731126,-0.803701 1.503734,-1.576291 0.772608,-0.772589 1.581513,-1.503698 0.808905,-0.736293 1.648921,-1.425921 0.845202,-0.694812 1.721516,-1.342958 0.876314,-0.648146 1.783739,-1.25481 0.907426,-0.606665 1.840778,-1.166663 0.933352,-0.559997 1.897815,-1.078514 0.964464,-0.518517 1.949669,-0.979997 0.985205,-0.461479 1.996336,-0.881478 1.005946,-0.414813 2.032633,-0.788145 1.026687,-0.362962 2.074116,-0.684442 1.042243,-0.31111 2.100042,-0.580739 1.057798,-0.264443 2.125968,-0.477035 1.073355,-0.212592 2.151895,-0.373332 1.07854,-0.16074 2.16745,-0.264444 1.088911,-0.103703 2.177821,-0.16074 1.088911,-0.05704 2.177822,-0.05185 1.088912,0 2.177822,0.05185 1.08891,0.05185 2.17782,0.155555 1.08891,0.108889 2.16745,0.269629 1.07854,0.16074 2.14671,0.373332 1.06817,0.212592 2.12597,0.477035 1.06298,0.264444 2.10523,0.580739 1.04224,0.316295 2.07411,0.684442 1.02669,0.368147 2.03263,0.788145 1.01114,0.414813 1.99634,0.881478 0.98521,0.466665 1.94967,0.985182 0.95928,0.513332 1.89781,1.073329 0.93336,0.559998 1.84078,1.166663 0.90743,0.606664 1.78374,1.25481 0.87631,0.648146 1.72152,1.342958 0.84001,0.689628 1.64892,1.425921 0.8089,0.731109 1.58151,1.503698 0.77261,0.77259 1.50374,1.576291 0.73112,0.803701 1.42595,1.654068 0.69483,0.850367 1.34299,1.721475 0.64816,0.871108 1.25484,1.783698 0.60668,0.912589 1.16669,1.840734 0.56001,0.928145 1.07335,1.897771 0.51335,0.969626 0.98521,1.949622 0.47186,0.979997 0.8815,1.996289 0.40964,1.016293 0.78298,2.032586 0.37334,1.016292 0.68445,2.074066 0.31631,1.037034 0.58594,2.099993 0.25927,1.057774 0.47705,2.125918 0.20741,1.07333 0.37334,2.151844 0.15556,1.078515 0.26445,2.1674 0.1037,1.0837 0.16074,2.17777 0.0519,1.088885 0.0519,2.17777",
            fill: "#ffffff"
        });

        const { ctx } = containerToDraw;

        ctx.lineCap = "round";
        ctx.lineJoin = "round";

        loadPathFromSVG({
            containerToDraw,
            pathS: "m 99.997408,11.11019 q 2.177822,0 4.360832,0.108889 2.17782,0.103703 4.35564,0.32148 2.16745,0.212592 4.32453,0.534072 2.16226,0.321481 4.30379,0.746664 2.13634,0.425184 4.25193,0.954071 2.12079,0.528887 4.20527,1.161477 2.08449,0.632591 4.14823,1.368884 2.04819,0.736294 4.06527,1.571106 2.02226,0.834811 3.99267,1.768141 1.97041,0.93333 3.89415,1.959993 1.92375,1.031848 3.79564,2.151844 1.87188,1.125182 3.68674,2.333325 1.81485,1.213329 3.56747,2.514806 1.75263,1.296292 3.43785,2.685916 1.6904,1.379255 3.30303,2.851842 1.61781,1.462217 3.16303,3.007397 1.54003,1.539994 3.00746,3.157766 1.46744,1.612587 2.85191,3.302951 1.38447,1.685179 2.6808,3.437765 1.29632,1.752587 2.51486,3.567395 1.21854,1.814809 2.33338,3.681469 1.11484,1.86666 2.1519,3.800727 1.03705,1.934067 1.96003,3.899245 0.92299,1.965178 1.76819,3.987393 0.8452,2.022215 1.57114,4.070356 0.72594,2.04814 1.36892,4.142948 0.64297,2.094807 1.1615,4.199985 0.51853,2.105177 0.95409,4.262206 0.43557,2.15703 0.74669,4.298503 0.31111,2.141474 0.53408,4.329615 0.22297,2.18814 0.32149,4.350354 0.0985,2.162215 0.1037,4.360725",
            stroke: {
                color: "#292929",
                width: 22
            }
        });

        loadPathFromSVG({
            containerToDraw,
            pathS: "m 99.997408,188.88881 q -2.177822,0 -4.360828,-0.1037 -2.177821,-0.10889 -4.355642,-0.32667 -2.167451,-0.20741 -4.324531,-0.53407 -2.162265,-0.3163 -4.30379,-0.74148 -2.136339,-0.42518 -4.251936,-0.95926 -2.120783,-0.52888 -4.205269,-1.16147 -2.084486,-0.63259 -4.148231,-1.36889 -2.048189,-0.73629 -4.065266,-1.5711 -2.022263,-0.83481 -3.992673,-1.76296 -1.970409,-0.92814 -3.894151,-1.97036 -1.923742,-1.02667 -3.795632,-2.14666 -1.871889,-1.12 -3.68674,-2.33333 -1.814851,-1.21333 -3.567479,-2.5148 -1.752627,-1.29629 -3.437846,-2.68073 -1.690404,-1.38444 -3.303029,-2.85184 -1.61781,-1.46741 -3.163026,-3.0074 -1.540031,-1.54518 -3.007467,-3.16295 -1.467437,-1.61259 -2.851909,-3.30295 -1.384472,-1.68518 -2.680794,-3.43777 -1.296322,-1.75259 -2.514865,-3.56739 -1.218543,-1.81481 -2.33338,-3.68147 -1.114837,-1.86666 -2.151895,-3.80073 -1.037058,-1.93407 -1.960039,-3.89406 -0.922981,-1.95999 -1.768183,-3.99258 -0.845202,-2.03258 -1.571143,-4.07035 -0.72594,-2.03777 -1.368916,-4.14295 -0.642976,-2.10518 -1.161505,-4.19999 -0.518528,-2.0948 -0.954093,-4.2622 -0.435564,-2.1674 -0.746681,-4.29851 -0.311118,-2.1311 -0.534085,-4.32961 -0.222967,-2.19851 -0.321488,-4.35035 -0.09852,-2.15185 -0.103706,-4.35554 0,-2.188145 0.103706,-4.365915 0.103706,-2.17777 0.321488,-4.35554 0.212597,-2.167399 0.534085,-4.324429 0.316302,-2.162214 0.746681,-4.303688 0.425194,-2.136288 0.954093,-4.251836 0.5289,-2.115548 1.161505,-4.20517 0.632605,-2.089622 1.368916,-4.148133 0.736311,-2.048141 1.571143,-4.065171 0.834831,-2.01703 1.768183,-3.992578 0.933352,-1.975549 1.960039,-3.89406 1.031873,-1.923697 2.151895,-3.795542 1.120022,-1.871845 2.33338,-3.681469 1.213357,-1.809623 2.514865,-3.57258 1.301507,-1.762956 2.680794,-3.437765 1.379287,-1.674809 2.851909,-3.302951 1.472622,-1.628142 3.007467,-3.162952 1.534845,-1.534809 3.163026,-3.007396 1.628181,-1.472587 3.303029,-2.851842 1.674848,-1.379254 3.437846,-2.680731 1.762998,-1.301477 3.567479,-2.514806 1.804481,-1.213329 3.681555,-2.333325 1.877075,-1.119996 3.800817,-2.151844 1.923742,-1.031848 3.894151,-1.959993 1.97041,-0.93333 3.992673,-1.762956 2.017077,-0.839997 4.070451,-1.576291 2.053374,-0.731108 4.143046,-1.368884 2.084486,-0.63259 4.200083,-1.161477 2.115598,-0.528887 4.262308,-0.954071 2.146709,-0.425183 4.298604,-0.746664 2.151895,-0.32148 4.329716,-0.534072 2.177821,-0.212592 4.350457,-0.32148 2.177821,-0.103703 4.360828,-0.103703",
            stroke: {
                color: "#cfcfcf",
                width: 22
            }
        });

        loadPathFromSVG({
            containerToDraw,
            pathS: "m 188.88881,99.9995 q 0,2.17777 -0.10371,4.36073 -0.10889,2.17777 -0.32667,4.35554 -0.2126,2.16739 -0.53408,4.32442 -0.31631,2.16222 -0.74669,4.30369 -0.42519,2.13629 -0.95409,4.25184 -0.5289,2.12073 -1.1615,4.20517 -0.63261,2.08444 -1.36892,4.14813 -0.73631,2.05333 -1.57114,4.06517 -0.83483,2.02222 -1.76819,3.99258 -0.93335,1.97036 -1.96003,3.89406 -1.03188,1.9237 -2.1519,3.79554 -1.12002,1.87185 -2.33338,3.68666 -1.21336,1.8148 -2.51486,3.56739 -1.30151,1.75259 -2.6808,3.43777 -1.37928,1.68518 -2.85191,3.30813 -1.47262,1.62296 -3.00746,3.15777 -1.53485,1.53481 -3.16303,3.0074 -1.62818,1.47258 -3.30303,2.85184 -1.67485,1.37925 -3.43785,2.68073 -1.76299,1.30147 -3.56747,2.5148 -1.80448,1.21333 -3.68156,2.33333 -1.87707,1.11999 -3.80082,2.15184 -1.92374,1.03185 -3.89415,1.96 -1.97041,0.93333 -3.99267,1.76814 -2.01708,0.83481 -4.07045,1.5711 -2.05338,0.7363 -4.14305,1.36889 -2.08967,0.63259 -4.20008,1.16147 -2.11041,0.52889 -4.26231,0.95926 -2.15189,0.43037 -4.2986,0.74148 -2.14671,0.31111 -4.32972,0.53407 -2.183,0.22296 -4.35045,0.32148 -2.16746,0.0985 -4.360832,0.10889 m 0,0 q -1.088911,0 -2.177822,-0.0519 -1.08891,-0.0519 -2.177821,-0.16074 -1.08891,-0.10371 -2.16745,-0.26963 -1.07854,-0.15556 -2.14671,-0.37333 -1.073355,-0.20741 -2.125968,-0.47704 -1.062984,-0.26444 -2.105227,-0.58074 -1.042243,-0.31629 -2.074116,-0.68444 -1.026687,-0.36815 -2.032633,-0.78296 -1.011131,-0.42 -1.996336,-0.88666 -0.985205,-0.46667 -1.949669,-0.98518 -0.959278,-0.50815 -1.897815,-1.06815 -0.933352,-0.56518 -1.840778,-1.17185 -0.907425,-0.60148 -1.783739,-1.25481 -0.876314,-0.64814 -1.721516,-1.34295 -0.840016,-0.68963 -1.648921,-1.42074 -0.808905,-0.73111 -1.581513,-1.5037 -0.772608,-0.77777 -1.503734,-1.58147 -0.731126,-0.80889 -1.425954,-1.65407 -0.689644,-0.84 -1.34299,-1.71629 -0.648161,-0.88148 -1.25484,-1.7837 -0.606679,-0.9074 -1.16669,-1.84592 -0.560011,-0.93333 -1.073355,-1.89777 -0.518529,-0.96444 -0.985205,-1.94962 -0.466676,-0.98518 -0.881499,-1.99111 -0.414823,-1.0111 -0.782978,-2.03777 -0.368156,-1.02666 -0.684458,-2.07406 -0.316303,-1.03704 -0.585938,-2.1 -0.259264,-1.05777 -0.477046,-2.12591 -0.207412,-1.07333 -0.373341,-2.15185 -0.155559,-1.07851 -0.26445,-2.16221 -0.103706,-1.08889 -0.160744,-2.17777 -0.05704,-1.08889 -0.05185,-2.17777 0,-1.08889 0.05185,-2.18296 0.05185,-1.08888 0.155559,-2.17777 0.108891,-1.0837 0.269635,-2.16221 0.160744,-1.07852 0.373341,-2.15185 0.212596,-1.07333 0.477046,-2.12591 0.269635,-1.05778 0.585938,-2.10518 0.311117,-1.04222 0.684458,-2.07407 0.36297,-1.02148 0.782978,-2.03258 0.414823,-1.00593 0.881499,-1.99111 0.466676,-0.98518 0.985205,-1.94962 0.518529,-0.96444 1.073355,-1.89777 0.554826,-0.93333 1.16669,-1.84592 0.611864,-0.91259 1.25484,-1.77851 0.642976,-0.86593 1.348175,-1.72148 0.705199,-0.85555 1.420769,-1.65407 0.71557,-0.79851 1.503734,-1.57629 0.772608,-0.77777 1.581513,-1.50369 0.808905,-0.7363 1.648921,-1.42593 0.845202,-0.69481 1.721516,-1.34814 0.876314,-0.64296 1.783739,-1.24962 0.907426,-0.60667 1.840778,-1.16667 0.933352,-0.56518 1.897815,-1.07851 0.964464,-0.51333 1.949669,-0.98 0.985205,-0.46666 1.996336,-0.88148 1.005946,-0.41999 2.032633,-0.78814 1.026687,-0.36815 2.074116,-0.68444 1.042243,-0.31111 2.100042,-0.58074 1.057798,-0.26445 2.125968,-0.47704 1.073355,-0.21259 2.151895,-0.37333 1.07854,-0.16074 2.16745,-0.26963 1.088911,-0.10889 2.177821,-0.15555 1.088911,-0.0467 2.177822,-0.0519",
            stroke: {
                color: "#292929",
                width: 22
            }
        });

        loadPathFromSVG({
            containerToDraw,
            pathS: "m 99.997408,11.11019 q 1.088912,0 2.177822,0.05185 1.08891,0.05185 2.17782,0.165925 1.08891,0.103704 2.16745,0.264444 1.07854,0.16074 2.14671,0.373332 1.06817,0.212592 2.12597,0.477035 1.06298,0.264444 2.10523,0.580739 1.04224,0.316295 2.07411,0.684442 1.02669,0.368147 2.03263,0.788145 1.01114,0.414813 1.99634,0.881478 0.98521,0.466665 1.94967,0.985182 0.95928,0.513332 1.89781,1.073329 0.93336,0.559998 1.84078,1.166663 0.90743,0.606664 1.78374,1.25481 0.87631,0.648146 1.72152,1.342958 0.84001,0.689628 1.64892,1.425921 0.8089,0.731109 1.58151,1.503698 0.77261,0.77259 1.50374,1.576291 0.73112,0.803701 1.42595,1.654068 0.69483,0.850367 1.34299,1.721475 0.64816,0.871108 1.25484,1.783698 0.60668,0.912589 1.16669,1.840734 0.56001,0.928145 1.07335,1.897771 0.51335,0.969626 0.98521,1.949622 0.47186,0.979997 0.8815,1.996289 0.40964,1.016293 0.78298,2.032586 0.37334,1.016292 0.68445,2.074066 0.31631,1.037034 0.58594,2.099993 0.25927,1.057774 0.47705,2.125918 0.20741,1.07333 0.37334,2.151844 0.15556,1.078515 0.26445,2.1674 0.1037,1.0837 0.16074,2.17777 0.0519,1.088885 0.0519,2.17777 0,1.088885 -0.0519,2.17777 -0.0518,1.088885 -0.15556,2.17777 -0.1037,1.088885 -0.26963,2.162214 -0.16074,1.0837 -0.37334,2.151845 -0.2126,1.068144 -0.47705,2.125918 -0.26445,1.057774 -0.58594,2.105177 -0.32148,1.047404 -0.68445,2.074067 -0.36297,1.021478 -0.78298,2.032585 -0.41483,1.005923 -0.8815,1.991104 -0.46668,0.985182 -0.98521,1.949623 -0.51852,0.964441 -1.07335,1.897771 -0.55483,0.93333 -1.16669,1.845919 -0.61186,0.912589 -1.25484,1.783697 -0.64298,0.871108 -1.34818,1.71629 -0.70519,0.845183 -1.42076,1.654069 -0.71557,0.808886 -1.50374,1.581475 -0.78816,0.77259 -1.58151,1.503699 -0.79335,0.731108 -1.64892,1.420735 -0.85558,0.689627 -1.72152,1.348144 -0.86594,0.658516 -1.78374,1.25481 -0.91779,0.596294 -1.84078,1.166662 -0.92298,0.570369 -1.89781,1.07333 -0.96446,0.518516 -1.94967,0.985181 -0.9852,0.466665 -1.99634,0.881479 -1.00594,0.414813 -2.03263,0.78296 -1.02669,0.368147 -2.07411,0.684442 -1.04743,0.316295 -2.10005,0.580738 -1.05261,0.264444 -2.12596,0.477036 -1.07336,0.212592 -2.1519,0.373332 -1.07854,0.16074 -2.16745,0.269628 -1.08891,0.108889 -2.17782,0.155555 -1.08891,0.04667 -2.177822,0.05704",
            stroke: {
                color: "#cfcfcf",
                width: 22
            }
        });
    },
    "web": containerToDraw => {
        loadPathFromSVG({
            containerToDraw,
            pathS: "M 148.12034,181.9985 Q 95.79005,149.13164 40.037113,175.77443 55.122582,115.84866 12.550381,71.055254 74.20506,66.882432 103.65513,12.559506 126.676,69.906558 187.4457,81.129814 140.01497,120.7365 148.12034,181.9985",
            fill: "#FFFFFF"
        });

        loadPathFromSVG({
            containerToDraw,
            pathS: "m 141.43913,192.63569 q -46.47544,-29.18634 -95.98672,-5.52665 -0.556768,0.26373 -1.136978,0.46886 -0.586071,0.21684 -1.178003,0.36922 -0.591932,0.15238 -1.207306,0.24615 -0.615375,0.0879 -1.230749,0.12308 -0.615375,0.0352 -1.23075,0 -0.615374,-0.0234 -1.230749,-0.11136 -0.603653,-0.0879 -1.207306,-0.23442 -0.597793,-0.14652 -1.178003,-0.35165 -0.58021,-0.20512 -1.142838,-0.46885 -0.562629,-0.26374 -1.090093,-0.58021 -0.527463,-0.31062 -1.025624,-0.67985 -0.49816,-0.36336 -0.955296,-0.77361 -0.457135,-0.41025 -0.879106,-0.87325 -0.41025,-0.45127 -0.779475,-0.94943 -0.369224,-0.4923 -0.691564,-1.01976 -0.322339,-0.52747 -0.586071,-1.08424 -0.943574,-1.98092 -1.16042,-4.1611 -0.222707,-2.19191 0.316478,-4.31934 13.397584,-53.21525 -24.4098586,-93.003616 -0.421971,-0.44541 -0.802917,-0.93771 -0.380946,-0.48058 -0.703286,-1.00218 -0.33406,-0.52747 -0.609513,-1.07251 -0.275454,-0.55091 -0.49816096,-1.13112 -0.222707,-0.57435 -0.386807,-1.17214 -0.1641,-0.59193 -0.269592,-1.20145 -0.105493,-0.60951 -0.146518,-1.21903 -0.04102,-0.60951 -0.0293,-1.23074 0.01172,-0.62124 0.08791,-1.230754 0.07619,-0.615375 0.210986,-1.219028 0.140657,-0.597792 0.33406,-1.183863 0.193403,-0.586071 0.44541396,-1.1487 0.24615,-0.562628 0.550907,-1.101813 0.304757,-0.539186 0.66226,-1.043207 0.357503,-0.504021 0.761892,-0.967017 0.398529,-0.468857 0.849803,-0.890828 1.588253,-1.512063 3.598477,-2.402891 2.010223,-0.879107 4.2021286,-1.025624 Q 66.46306,54.82109 92.61941,6.575721 q 0.29303,-0.545046 0.63881,-1.054928 0.34579,-0.509882 0.73845,-0.984599 0.39267,-0.474718 0.83223,-0.90841 0.43955,-0.433693 0.92013,-0.8205 0.48058,-0.386807 0.99632,-0.732589 0.51574,-0.345781 1.05493,-0.627096 0.53918,-0.281314 1.11939,-0.521603 0.58021,-0.240289 1.16042,-0.410249 0.58021,-0.169961 1.20145,-0.293036 0.62123,-0.123075 1.21903,-0.169961 0.59779,-0.04688 1.23074,-0.05275 0.61538,0 1.23075,0.07033 0.61538,0.05861 1.21903,0.187542 0.60365,0.117214 1.18973,0.304757 0.59193,0.181682 1.16042,0.421971 0.56849,0.240289 1.11353,0.527464 1.92818,1.054928 3.38749,2.695927 1.46518,1.635138 2.28568,3.674666 20.4363,50.929573 74.40758,60.892781 0.60365,0.117214 1.19558,0.281314 0.59194,0.175822 1.17215,0.404389 0.56848,0.222707 1.11353,0.509882 0.55091,0.281321 1.06665,0.615381 0.5216,0.33992 1.00218,0.72086 0.48058,0.38681 0.92599,0.8205 0.43956,0.42784 0.83809,0.89669 0.39852,0.46886 0.75017,0.97874 0.35164,0.50988 0.64467,1.05493 0.2989,0.53332 0.54505,1.10181 0.24615,0.56849 0.42783,1.15456 0.18168,0.58607 0.31648,1.18973 0.12894,0.60365 0.19927,1.21902 0.0703,0.61538 0.0762,1.23075 0.006,0.61538 -0.041,1.23075 -0.0586,0.61538 -0.1641,1.21903 -0.39853,2.1626 -1.5062,4.05561 -1.11354,1.89887 -2.79556,3.30544 -42.12093,35.181846 -34.91811,89.586816 0.0821,0.60952 0.0996,1.23075 0.0234,0.61538 -0.0176,1.23075 -0.041,0.61538 -0.14066,1.22489 -0.0996,0.60951 -0.25787,1.20145 -0.15824,0.59193 -0.38095,1.17214 -0.21098,0.58607 -0.48644,1.13698 -0.27545,0.5509 -0.59779,1.07251 -0.3282,0.52746 -0.70329,1.01976 -0.37508,0.4923 -0.79705,0.93771 -0.41611,0.45128 -0.87911,0.85567 -0.46886,0.41025 -0.96702,0.76775 -0.50402,0.36336 -1.03734,0.66812 -0.52747,0.31062 -1.09596,0.56263 -0.56262,0.25787 -1.14283,0.45713 -0.58607,0.19927 -1.18973,0.33992 -0.59779,0.14066 -1.2073,0.21685 -2.18019,0.29304 -4.32521,-0.17582 -2.14502,-0.46886 -4.00286,-1.641 m 13.36242,-21.27438 -6.68121,10.63719 -12.44815,1.64686 q -9.01378,-68.11318 43.7209,-112.156406 l 8.05261,9.635 -2.28567,12.35438 Q 117.60361,80.995024 92.00988,17.23049 l 11.6511,-4.676847 11.04157,5.983785 Q 81.95291,78.949634 13.400184,83.585454 l -0.843942,-12.5302 9.101683,-8.650405 Q 68.98902,112.20916 52.21567,178.83958 l -12.178557,-3.06515 -5.415296,-11.32876 q 61.994593,-29.62589 120.179733,6.91564",
            fill: "#cfcfcf"
        });
    },
    "talisman": containerToDraw => {
        loadPathFromSVG({
            containerToDraw,
            pathS: "m 139.05037,138.5325 c 7.26512,42.12771 -53.238739,40.28788 -122.736709,-31.26605 l 56.935026,-2.68771 C 33.132603,89.810229 64.980529,38.328193 161.69359,13.917175 l -26.13447,50.650784 c 32.85097,-27.35364 61.51244,25.968223 34.28625,121.933161 z",
            fill: "#fff824"
        });

        loadPathFromSVG({
            containerToDraw,
            pathS: "m 150.75435,136.51534 q 3.87917,22.52131 -10.58457,34.20867 -13.11711,10.59565 -35.81021,6.49483 -44.466286,-8.03541 -96.5634422,-61.67869 -0.4100823,-0.41563 -0.7758317,-0.87558 -0.3602085,-0.45441 -0.6760831,-0.94208 -0.3158745,-0.48767 -0.5818742,-1.00859 -0.2715416,-0.52092 -0.4821247,-1.06399 -0.2216667,-0.53755 -0.3768331,-1.1028 -0.16625,-0.55416 -0.2659997,-1.13049 -0.1108334,-0.57634 -0.1551663,-1.15821 -0.055419,-0.58188 -0.044329,-1.16376 0.01108,-0.58186 0.077588,-1.16374 0.066499,-0.57634 0.1884166,-1.14712 0.1219161,-0.5708 0.299249,-1.13051 0.1773337,-0.5597 0.4100833,-1.0917 0.2272076,-0.532 0.5098329,-1.04183 0.2826244,-0.50983 0.6095827,-0.99196 0.3324991,-0.48212 0.7148741,-0.925456 0.3768331,-0.44333 0.7924573,-0.853411 1.5572073,-1.512874 3.5466631,-2.377374 1.994997,-0.864499 4.167329,-0.964242 L 72.68899,92.7196 l 0.559707,11.85914 -4.100833,11.13874 Q 47.70163,107.82616 44.814424,89.455558 42.193219,72.797321 57.094745,55.191468 86.28267,20.70571 158.78976,2.4071447 q 0.56525,-0.1440827 1.14159,-0.2327496 0.57632,-0.083128 1.16374,-0.1108333 0.58187,-0.033249 1.16375,-0.00551 0.58188,0.027709 1.16375,0.1108334 0.58188,0.083128 1.14159,0.2216668 0.5597,0.1385417 1.10832,0.3435829 0.55417,0.1939584 1.08063,0.4433325 0.532,0.2438333 1.03075,0.5430832 0.49875,0.2992499 0.96979,0.6483747 0.47104,0.3491238 0.90329,0.7370406 0.43225,0.3879159 0.82571,0.8257075 0.38792,0.426708 0.73704,0.8977489 0.34912,0.4655 0.65391,0.9697911 0.3048,0.5042911 0.54863,1.0252068 0.24384,0.5209167 0.44333,1.0750826 0.19951,0.5541652 0.34358,1.1138732 0.532,2.105832 0.28263,4.26708 -0.24938,2.155706 -1.24133,4.084203 l -26.14002,50.650777 -10.55132,-5.441905 -7.60316,-9.127116 q 17.56707,-14.624444 34.91247,-7.941201 15.73832,6.062578 23.53543,27.769267 15.27836,42.521149 -5.13158,114.462999 -0.1607,0.56525 -0.37129,1.10833 -0.21058,0.54308 -0.48213,1.05846 -0.27153,0.51537 -0.58187,1.01412 -0.31034,0.49876 -0.67608,0.94209 -0.36575,0.44333 -0.76475,0.88666 -0.399,0.44333 -0.84788,0.79246 -0.44887,0.34913 -0.92545,0.70933 -0.47659,0.36021 -0.98641,0.62066 -0.50984,0.26047 -1.04738,0.51538 -0.53755,0.25492 -1.08616,0.41562 -0.54863,0.16072 -1.12497,0.29926 -0.57078,0.12745 -1.15266,0.19395 -0.57634,0.0665 -1.16375,0.0775 -0.58187,0.0111 -1.16375,-0.0333 -0.58187,-0.0444 -1.15266,-0.15516 -0.5708,-0.11084 -1.13604,-0.26047 -2.08921,-0.59295 -3.83483,-1.88416 -1.74563,-1.2912 -2.92046,-3.1255 l -30.79501,-47.96308 9.99162,-6.41724 z m -23.40798,4.03986 q -0.14407,-0.85895 -0.16624,-1.72899 -0.0221,-0.87004 0.0832,-1.73454 0.10528,-0.8645 0.33249,-1.70683 0.23275,-0.83679 0.58741,-1.63479 0.34914,-0.798 0.81463,-1.53504 0.4655,-0.73704 1.02521,-1.3965 0.55971,-0.65946 1.21916,-1.23579 0.66501,-0.57079 1.39096,-1.04183 0.49321,-0.31587 1.01412,-0.58188 0.51538,-0.26045 1.05846,-0.47658 0.54309,-0.21612 1.10833,-0.37129 0.55417,-0.16071 1.13051,-0.266 0.57632,-0.0998 1.1582,-0.14963 0.58188,-0.0443 1.16375,-0.0333 0.58187,0.0111 1.16374,0.0775 0.58188,0.0665 1.14713,0.19396 0.56525,0.12746 1.12496,0.30479 0.55971,0.17734 1.09171,0.41008 0.53199,0.23276 1.04183,0.51538 0.50983,0.28262 0.99196,0.62066 0.48212,0.33805 0.91992,0.70934 0.43779,0.37129 0.85341,0.798 0.41563,0.4267 0.76475,0.87558 0.34912,0.44887 0.67608,0.95317 l 30.80055,47.96307 -9.99716,6.41724 -11.42136,-3.24187 q 18.32074,-64.61023 5.63033,-99.954934 -4.123,-11.48232 -9.72007,-13.632489 -4.33358,-1.673577 -11.17754,4.023246 -0.66499,0.559716 -1.41312,1.014125 -0.74258,0.45442 -1.54612,0.792462 -0.798,0.343582 -1.64033,0.559706 -0.84234,0.216125 -1.70683,0.315873 -0.8645,0.09975 -1.73455,0.06101 -0.87004,-0.03877 -1.72899,-0.188415 -0.85342,-0.166247 -1.67913,-0.44333 -0.82016,-0.277084 -1.59599,-0.681624 -0.52092,-0.266004 -1.00859,-0.581876 -0.48767,-0.321422 -0.94208,-0.681624 -0.45996,-0.365752 -0.88112,-0.775832 -0.41563,-0.40454 -0.79247,-0.84788 -0.37683,-0.443329 -0.70932,-0.925458 -0.3325,-0.482119 -0.60959,-0.991956 -0.27708,-0.509829 -0.51537,-1.047376 -0.2383,-0.537536 -0.41008,-1.091702 -0.1718,-0.554166 -0.29926,-1.124958 -0.12745,-0.57079 -0.18841,-1.147124 -0.0609,-0.581874 -0.072,-1.163748 -0.0111,-0.581874 0.0388,-1.163749 0.0499,-0.581875 0.15517,-1.158207 0.11083,-0.570791 0.266,-1.130499 0.16625,-0.565249 0.37683,-1.108333 0.22167,-0.537541 0.48212,-1.052915 l 26.14002,-50.656325 10.55132,5.441912 2.90938,11.515571 q -65.114636,16.431102 -89.37602,45.103653 -7.880244,9.309991 -6.949246,15.239571 0.720423,4.582952 9.077246,7.658579 0.814621,0.299243 1.579373,0.720413 0.764751,0.415621 1.457455,0.942078 0.698254,0.520913 1.30783,1.141578 0.609585,0.620666 1.130503,1.318919 0.509828,0.703793 0.919918,1.474085 0.40454,0.770292 0.698244,1.590453 0.288163,0.82017 0.454419,1.67358 0.166246,0.85342 0.210585,1.72346 0.02775,0.58187 0,1.16375 -0.03326,0.58187 -0.121917,1.16374 -0.08315,0.57634 -0.227215,1.14158 -0.144077,0.56525 -0.338042,1.10834 -0.199495,0.55417 -0.448869,1.08062 -0.249374,0.52646 -0.554167,1.02521 -0.299253,0.49875 -0.648375,0.96979 -0.349122,0.47104 -0.742582,0.89775 -0.393461,0.42671 -0.825711,0.82571 -0.43225,0.399 -0.897749,0.73704 -0.465499,0.33804 -0.975327,0.64283 -0.509838,0.3048 -1.025206,0.54863 -0.515377,0.24382 -1.080624,0.44333 -0.565257,0.1995 -1.108334,0.3325 -0.570796,0.14408 -1.147123,0.22721 -0.576336,0.0831 -1.163752,0.11083 l -56.935025,2.69325 -0.554167,-11.85916 8.511992,-8.279241 q 46.788241,48.179201 83.751126,54.856901 12.00877,2.16125 16.67485,-1.60708 3.60762,-2.91491 2.09474,-11.6929",
            fill: "#cfc91d"
        });

        const { ctx, radius } = containerToDraw;
        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor("#37cf37");

        ctx.arc(1.5, 0, radius * 0.3, 0, Math.PI * 2);

        ctx.fill();
    },
    "triangle": containerToDraw => {
        const { ctx, radius } = containerToDraw;
        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor("#FFFFFF");
        ctx.lineWidth = radius / 3;
        ctx.strokeStyle = containerToDraw.getRenderColor("#CFCFCF");

        ctx.lineCap = "round";
        ctx.lineJoin = "round";
        ctx.moveTo(radius, 0);
        ctx.lineTo(-radius / Math.sqrt(3), -radius);
        ctx.lineTo(-radius / Math.sqrt(3), radius);
        ctx.lineTo(radius, 0);

        ctx.fill();
        ctx.stroke();
    },
    "stinger": containerToDraw => {
        const { ctx, radius } = containerToDraw;
        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor("#333333");
        ctx.lineWidth = radius / 3;
        ctx.strokeStyle = containerToDraw.getRenderColor("#292929");

        ctx.lineCap = "round";
        ctx.lineJoin = "round";
        ctx.moveTo(radius, 0);
        ctx.lineTo(-radius / Math.sqrt(3), -radius);
        ctx.lineTo(-radius / Math.sqrt(3), radius);
        ctx.lineTo(radius, 0);

        ctx.fill();
        ctx.stroke();
    },
    "pinger": containerToDraw => {
        const { ctx, radius } = containerToDraw;
        const time = Date.now() / 1000;

        ctx.beginPath();
        ctx.lineCap = "round";
        ctx.lineJoin = "round";
        ctx.moveTo(radius, 0);
        ctx.lineTo(-radius / Math.sqrt(3), -radius);
        ctx.lineTo(-radius / Math.sqrt(3), radius);
        ctx.lineTo(radius, 0);

        const pulseIntensity = Math.sin(time * 2) * 0.2 + 0.8;

        const baseColor = {
            r: 220,
            g: 30 + Math.sin(time) * 20,
            b: 50 + Math.sin(time * 1.5) * 20
        };

        const gradient = ctx.createRadialGradient(
            radius * 0.2, -radius * 0.2, 0,
            0, 0, radius * 1.5
        );

        gradient.addColorStop(0, `rgb(${baseColor.r + 35}, ${baseColor.g + 20}, ${baseColor.b + 20})`);
        gradient.addColorStop(0.5, `rgb(${baseColor.r * pulseIntensity}, ${baseColor.g * pulseIntensity}, ${baseColor.b * pulseIntensity})`);
        gradient.addColorStop(1, `rgb(${baseColor.r / 3}, ${baseColor.g / 2}, ${baseColor.b / 2})`);

        ctx.fillStyle = gradient;

        ctx.lineWidth = radius / 4;
        const highlightIntensity = Math.sin(time * 3) * 0.3 + 0.7;

        ctx.strokeStyle = `rgb(${180 * highlightIntensity}, ${30 * highlightIntensity}, ${40 * highlightIntensity})`;

        ctx.fill();
        ctx.stroke();

        ctx.beginPath();
        ctx.lineWidth = radius / 8;
        ctx.strokeStyle = `rgb(255, ${100 + Math.sin(time * 5) * 40}, ${100 + Math.sin(time * 3) * 20})`;
        ctx.moveTo(radius * 0.7, -radius * 0.1);
        ctx.lineTo(-radius * 0.3, -radius * 0.6);
        ctx.stroke();
    },
    "stick": containerToDraw => {
        loadPathFromSVG({
            containerToDraw,
            pathS: "M 22.808371,157.42708 94.071072,111.6615 q 2.84553,-1.81995 6.206808,-1.99187 l 68.1919,-3.52727 q 0.62246,-0.0296 1.24492,0 0.62246,0.0296 1.24492,0.11856 0.6106,0.0889 1.21527,0.23713 0.61061,0.15413 1.1975,0.36162 0.58689,0.20749 1.15006,0.47425 0.56318,0.26677 1.10265,0.58689 0.53946,0.32013 1.03743,0.68767 0.49797,0.36755 0.96629,0.78845 0.46833,0.4209 0.88923,0.87737 0.41497,0.4624 0.78845,0.9663 0.37347,0.49797 0.6936,1.0315 0.32012,0.53354 0.59282,1.09672 0.27269,0.56317 0.47425,1.15006 0.21934,0.59282 0.36755,1.19157 0.15413,0.6106 0.24898,1.22713 0.0949,0.61653 0.12449,1.23899 0.0356,0.62246 0,1.24492 -0.0237,0.62246 -0.11856,1.24492 -0.0889,0.61653 -0.23713,1.22121 -0.1482,0.60467 -0.35569,1.19156 -0.20749,0.58689 -0.47425,1.156 -0.26677,0.5691 -0.59282,1.09671 -0.32605,0.52761 -0.68174,1.04336 -0.35569,0.51575 -0.78845,0.96037 -0.43276,0.44461 -0.8833,0.88923 -0.4624,0.41497 -0.96037,0.78844 -0.49796,0.37348 -1.03743,0.69953 -0.53946,0.32605 -1.09671,0.59282 -0.56318,0.26084 -1.15007,0.47425 -0.58689,0.21342 -1.18564,0.36755 -0.6106,0.15413 -1.22713,0.24306 -0.61653,0.0889 -1.24492,0.12449 l -68.18005,3.52727 -0.65802,-12.68632 6.86483,10.68852 -71.262695,45.75965 q -0.527608,0.33791 -1.078929,0.62246 -0.557249,0.28455 -1.138211,0.50982 -0.580962,0.2312 -1.185637,0.39719 -0.592819,0.17192 -1.20935,0.28456 -0.616531,0.1067 -1.23899,0.16006 -0.62246,0.0474 -1.244919,0.0356 -0.622459,-0.0119 -1.244919,-0.083 -0.622459,-0.0711 -1.227134,-0.20749 -0.604674,-0.13634 -1.203421,-0.32012 -0.598747,-0.18377 -1.167852,-0.44461 -0.569106,-0.26084 -1.114499,-0.55132 -0.545393,-0.29048 -1.061145,-0.66396 -0.515752,-0.37347 -0.984078,-0.75881 -0.468327,-0.38533 -0.912941,-0.85365 -0.444613,-0.46833 -0.818089,-0.93666 -0.373476,-0.46832 -0.723239,-1.01965 -0.349762,-0.55132 -0.622459,-1.07892 -0.272696,-0.52761 -0.509824,-1.13822 -0.237127,-0.6106 -0.403116,-1.1797 -0.165989,-0.56911 -0.278625,-1.21528 -0.112635,-0.64617 -0.160061,-1.23306 -0.04742,-0.5869 -0.03557,-1.24492 0.0059,-0.62839 0.08299,-1.24492 0.07114,-0.62246 0.201558,-1.23306 0.136348,-0.60468 0.32605,-1.20343 0.19563,-0.59281 0.444614,-1.16192 0.248984,-0.57503 0.551321,-1.12043 0.302337,-0.54539 0.658028,-1.05521 0.355691,-0.50983 0.764736,-0.99001 0.409045,-0.48018 0.853659,-0.90701 0.444613,-0.42683 0.936653,-0.81809 0.492039,-0.39126 1.013719,-0.72324 M 89.547862,116.72417 133.35714,28.204521 q 0.27863,-0.557249 0.61061,-1.084857 0.32605,-0.533537 0.71138,-1.025576 0.3794,-0.492039 0.80623,-0.94851 0.42683,-0.45647 0.89516,-0.865515 0.47425,-0.414972 0.97815,-0.770663 0.50982,-0.367548 1.04929,-0.675813 0.53946,-0.308266 1.10857,-0.569106 0.5691,-0.26084 1.16192,-0.45647 0.59282,-0.201559 1.1975,-0.343835 0.6106,-0.136348 1.22713,-0.219343 0.62246,-0.08299 1.24492,-0.100779 0.62246,-0.01778 1.24492,0.02371 0.62246,0.0415 1.23899,0.142276 0.61653,0.100779 1.21527,0.266769 0.59875,0.165989 1.18564,0.379403 0.58689,0.225271 1.14414,0.497968 0.56318,0.278624 1.09079,0.610603 0.53353,0.331978 1.02557,0.711382 0.49204,0.379404 0.94851,0.806233 0.45647,0.426829 0.86552,0.895156 0.41497,0.474254 0.77066,0.97815 0.36755,0.509824 0.67581,1.049289 0.30827,0.539464 0.56911,1.10857 0.25491,0.569106 0.45647,1.161924 0.20156,0.592818 0.33791,1.197493 0.13634,0.604675 0.22527,1.227134 0.0889,0.62246 0.10078,1.244919 0.0119,0.622459 -0.0237,1.244919 -0.0356,0.622459 -0.14227,1.23899 -0.10671,0.616531 -0.26677,1.221206 -0.16006,0.604675 -0.38533,1.185637 -0.22527,0.580962 -0.49797,1.138211 l -43.80928,88.519654 q -0.2727,0.55725 -0.60467,1.08485 -0.33198,0.53354 -0.71139,1.02558 -0.3794,0.49204 -0.80623,0.94851 -0.42683,0.45647 -0.89516,0.86551 -0.47425,0.41498 -0.97815,0.77067 -0.50982,0.36755 -1.04928,0.67581 -0.53947,0.30827 -1.10858,0.56911 -0.5691,0.26084 -1.16192,0.45647 -0.59282,0.20155 -1.19749,0.34383 -0.61061,0.13635 -1.22714,0.21934 -0.62246,0.083 -1.24492,0.10078 -0.62245,0.0178 -1.24491,-0.0237 -0.622459,-0.0415 -1.244919,-0.14228 -0.622459,-0.10078 -1.215279,-0.26676 -0.59875,-0.16007 -1.18564,-0.37941 -0.58096,-0.22527 -1.14414,-0.49797 -0.55725,-0.27862 -1.08485,-0.6106 -0.53354,-0.33198 -1.02558,-0.71138 -0.49204,-0.3794 -0.94851,-0.80623 -0.45647,-0.42683 -0.86551,-0.89516 -0.41498,-0.47425 -0.77067,-0.97815 -0.36755,-0.50982 -0.67581,-1.04929 -0.30827,-0.53946 -0.56911,-1.10857 -0.25491,-0.5691 -0.45647,-1.16192 -0.20156,-0.59282 -0.34383,-1.1975 -0.14228,-0.60467 -0.21934,-1.22713 -0.0771,-0.62246 -0.10078,-1.24492 -0.0237,-0.62246 0.0237,-1.24492 0.0474,-0.62246 0.14228,-1.23899 0.0949,-0.61653 0.26676,-1.21528 0.17192,-0.59874 0.38534,-1.18563 0.21934,-0.59282 0.49203,-1.14414",
            fill: "#7d5b1f",
            stroke: {
                color: "#654a19",
                width: 10
            }
        });
    },
    "starfish": containerToDraw => {
        loadPathFromSVG({
            containerToDraw,
            pathS: "m 26.141972,62.510745 q 75.563898,6.569193 113.586208,13.044674 47.96173,8.168967 47.90223,25.022431 -0.0606,16.8583 -48.07958,24.68562 -38.06804,6.2069 -113.673988,12.2346 -0.61234,0.0495 -1.23117,0.0368 -0.61401,-0.0116 -1.22292,-0.0808 -0.61083,-0.0721 -1.21062,-0.20494 -0.60277,-0.13111 -1.18489,-0.32107 -0.58506,-0.18806 -1.14759,-0.43204 -0.56253,-0.24395 -1.09954,-0.54569 -0.53702,-0.30177 -1.04292,-0.65245 -0.50585,-0.35066 -0.97575,-0.74917 -0.46212,-0.39935 -0.89416,-0.84276 -0.42233,-0.44128 -0.80496,-0.92448 -0.38253,-0.48326 -0.71195,-1.00034 -0.33266,-0.51503 -0.61156,-1.06431 -0.28211,-0.54724 -0.50546,-1.11944 -0.22331,-0.57221 -0.39181,-1.16276 -0.16852,-0.59053 -0.2755,-1.19534 -0.10885,-0.60773 -0.15833,-1.2201 -0.04,-0.51886 -0.0389,-1.03878 l 0.17653,-50.0482 q 0.002,-0.616141 0.0663,-1.226127 0.0622,-0.612954 0.18264,-1.213031 0.12141,-0.604914 0.30465,-1.191046 0.17838,-0.587215 0.4186,-1.155645 0.23725,-0.56655 0.52745,-1.108676 0.2902,-0.542121 0.63603,-1.049072 0.34584,-0.506956 0.73387,-0.986786 0.38805,-0.479836 0.82933,-0.902192 0.44123,-0.42235 0.91129,-0.825649 0.47004,-0.403285 0.99089,-0.726802 0.52085,-0.323523 1.053,-0.629289 0.54534,-0.285111 1.11192,-0.517281 0.56765,-0.237015 1.15927,-0.410361 0.58782,-0.17925 1.19181,-0.294023 0.60211,-0.117723 1.21659,-0.176881 0.61155,-0.05726 1.22286,-0.05625 0.51995,0.0011 1.0399,0.04784 m -2.16531,24.932867 1.08416,-12.467376 12.51225,0.0461 -0.18147,50.04717 -12.51229,-0.046 -0.9956,-12.4717 q 74.58579,-5.94698 111.639568,-11.98541 17.81017,-2.905319 26.27405,-5.692817 3.1041,-1.022103 4.06091,-1.652418 -3.23226,2.138068 -3.25331,7.269285 -0.0162,5.13226 3.20151,7.29452 -0.9518,-0.63983 -4.04995,-1.68193 -8.44306,-2.84617 -26.23097,-5.87871 Q 98.515022,93.92266 23.974652,87.440815",
            fill: "#a9403e",
            stroke: {
                color: "#a9403e",
                width: 10
            }
        });

        loadPathFromSVG({
            containerToDraw,
            pathS: "M 25.057852,74.978119 Q 325.26556,101.07241 24.879312,125.0234 Z",
            fill: "#d14f4d",
            stroke: {
                color: "#a9403e",
                width: 10
            }
        });

        loadPathFromSVG({
            containerToDraw,
            pathS: "m 160.10236,100.48125 q -0.002,0.49174 -0.0506,0.98349 -0.05,0.4888 -0.14838,0.96685 -0.0976,0.48589 -0.24243,0.9562 -0.14379,0.46546 -0.33596,0.92021 -0.18732,0.45582 -0.42087,0.89125 -0.23356,0.43542 -0.50529,0.83697 -0.2787,0.41022 -0.58887,0.79057 -0.31688,0.37635 -0.66226,0.72101 -0.35129,0.34842 -0.73189,0.65734 -0.38169,0.31376 -0.78969,0.58619 -0.40801,0.27244 -0.84615,0.49757 -0.43814,0.22511 -0.88732,0.41989 -0.44918,0.19476 -0.9301,0.32667 -0.48091,0.13192 -0.95243,0.23293 -0.47825,0.0969 -0.97103,0.14503 -0.48983,0.0461 -0.98155,0.0435 -0.49174,-0.003 -0.98054,-0.0526 -0.4888,-0.0501 -0.9717,-0.14945 -0.48292,-0.0995 -0.95134,-0.24136 -0.46843,-0.14191 -0.92317,-0.33408 -0.45475,-0.19216 -0.88829,-0.42276 -0.43353,-0.23059 -0.83888,-0.50823 -0.40534,-0.27764 -0.78867,-0.58592 -0.38333,-0.30829 -0.72396,-0.66037 -0.34841,-0.35131 -0.65735,-0.73189 -0.31082,-0.38356 -0.58322,-0.79159 -0.2724,-0.40803 -0.50049,-0.84429 -0.23398,-0.43249 -0.41882,-0.89215 -0.18591,-0.45482 -0.32774,-0.92525 -0.14185,-0.47043 -0.23291,-0.95244 -0.0911,-0.482 -0.14211,-0.97292 -0.051,-0.49089 -0.0437,-0.98155 0.008,-0.490654 0.0495,-0.978666 0.053,-0.490668 0.14758,-0.974648 0.0984,-0.478071 0.24135,-0.95134 0.14674,-0.467311 0.33595,-0.920157 0.19217,-0.454743 0.42089,-0.891258 0.23543,-0.432443 0.50823,-0.83886 0.27576,-0.408295 0.59075,-0.787603 0.31205,-0.377418 0.66039,-0.723947 0.35129,-0.348422 0.73189,-0.657356 0.38354,-0.310843 0.79154,-0.583275 0.40801,-0.272434 0.8443,-0.500474 0.43247,-0.234026 0.8892,-0.416942 0.4567,-0.182957 0.92525,-0.327744 0.46855,-0.144804 0.9554,-0.234792 0.47825,-0.09698 0.96996,-0.140211 0.48982,-0.0462 0.9845,-0.04564 0.48985,-5.12e-4 0.97865,0.04949 0.48881,0.05002 0.96876,0.151331 0.47996,0.101334 0.95429,0.239472 0.47434,0.138145 0.92317,0.334075 0.44884,0.195929 0.88829,0.422767 0.43944,0.226831 0.83887,0.508227 0.40831,0.27576 0.78868,0.585922 0.37635,0.316886 0.72288,0.665223 0.34654,0.348328 0.66031,0.730007 0.31377,0.381671 0.58026,0.793463 0.26645,0.411815 0.50344,0.842381 0.23103,0.43438 0.41694,0.889203 0.18591,0.454822 0.32774,0.925265 0.14185,0.470425 0.23479,0.955383 0.093,0.484977 0.14022,0.969964 0.0473,0.484967 0.0438,0.98155 m -30.0305,-0.10582 q -7.1e-4,0.7357 -0.0753,1.4728 -0.0735,0.73227 -0.22364,1.45515 -0.14527,0.72397 -0.36203,1.42701 -0.21488,0.706 -0.50017,1.38624 -0.28529,0.68023 -0.63508,1.33094 -0.35169,0.64774 -0.76384,1.25928 -0.41027,0.61444 -0.87888,1.183 -0.4686,0.56854 -0.99446,1.08634 -0.52587,0.51778 -1.09448,0.98803 -0.56862,0.47023 -1.18834,0.8733 -0.61484,0.4042 -1.26549,0.75222 -0.65249,0.34509 -1.33569,0.62244 -0.68129,0.28034 -1.38841,0.49405 -0.70606,0.20888 -1.43014,0.35031 -0.72409,0.14143 -1.45842,0.21459 -0.73434,0.0734 -1.47086,0.0647 -0.73653,-0.009 -1.47281,-0.0751 -0.73629,-0.0669 -1.45811,-0.22178 -0.721,-0.14716 -1.42888,-0.36497 -0.70305,-0.21677 -1.38327,-0.50205 -0.68024,-0.28531 -1.33095,-0.6351 -0.65071,-0.34979 -1.26035,-0.75899 -0.60962,-0.4092 -1.18193,-0.88369 -0.57232,-0.47455 -1.08929,-0.9926 -0.51591,-0.52291 -0.98509,-1.09635 -0.46431,-0.57241 -0.87338,-1.1883 -0.40711,-0.613 -0.7522,-1.26549 -0.3451,-0.6525 -0.62542,-1.3338 -0.28033,-0.68132 -0.49108,-1.39032 -0.21182,-0.70415 -0.35326,-1.42825 -0.14143,-0.72409 -0.20977,-1.45734 -0.0703,-0.73623 -0.0666,-1.47385 0.004,-0.737574 0.0771,-1.469827 0.0735,-0.732253 0.22174,-1.458084 0.14528,-0.723984 0.36204,-1.427011 0.21486,-0.705994 0.50016,-1.386227 0.28529,-0.680229 0.63509,-1.330941 0.35167,-0.647755 0.76383,-1.259264 0.41215,-0.611524 0.87887,-1.183026 0.46673,-0.571485 0.99447,-1.086325 0.52774,-0.514841 1.09448,-0.988037 0.56677,-0.473155 1.19023,-0.870344 0.62346,-0.39719 1.26548,-0.752207 0.65065,-0.348007 1.33381,-0.625417 0.68425,-0.282212 1.38841,-0.494037 0.70901,-0.210757 1.4331,-0.352186 0.72409,-0.14143 1.45735,-0.209785 0.73326,-0.06835 1.47381,-0.06658 0.74055,0.0019 1.46985,0.07718 0.73227,0.07354 1.45623,0.218804 0.72101,0.14716 1.42889,0.36499 0.70304,0.216758 1.38328,0.502055 0.68022,0.285285 1.33094,0.635081 0.6507,0.34979 1.26222,0.761948 0.61151,0.412158 1.18006,0.880767 0.56854,0.468599 1.08929,0.99258 0.51779,0.525864 0.98508,1.096356 0.46435,0.572382 0.87336,1.188314 0.40712,0.612978 0.7522,1.265491 0.34507,0.652512 0.6254,1.333802 0.28033,0.681292 0.49109,1.390316 0.21183,0.704164 0.35326,1.428246 0.14143,0.724082 0.21167,1.460297 0.0702,0.736225 0.0647,1.470861 m -40.037318,-0.1446 q -0.003,0.98642 -0.10301,1.96402 -0.1,0.97759 -0.29888,1.94343 -0.193,0.96206 -0.48273,1.90268 -0.28973,0.94061 -0.66814,1.84631 -0.37842,0.90574 -0.84742,1.77361 -0.46898,0.86792 -1.01271,1.68368 -0.54372,0.81581 -1.17855,1.57332 -0.63485,0.75754 -1.32076,1.44791 -0.69962,0.69496 -1.46378,1.31472 -0.76226,0.62271 -1.58318,1.16643 -0.81789,0.54187 -1.68667,1.00394 -0.86874,0.46205 -1.77839,0.83389 -0.90965,0.3718 -1.85535,0.65442 -0.94571,0.28259 -1.90301,0.46877 -0.96615,0.19181 -1.94581,0.28418 -0.97965,0.0922 -1.96312,0.0877 -0.98345,-0.005 -1.96402,-0.10301 -0.98055,-0.0981 -1.93965,-0.29298 -0.95912,-0.19487 -1.90457,-0.48568 -0.94543,-0.29079 -1.84632,-0.66814 -0.90088,-0.37734 -1.77361,-0.84743 -0.87273,-0.47004 -1.68368,-1.01269 -0.81366,-0.5534 -1.57332,-1.17855 -0.75671,-0.62704 -1.44979,-1.32371 -0.69495,-0.69963 -1.31281,-1.46083 -0.62458,-0.76524 -1.16644,-1.58317 -0.54188,-0.81791 -1.00394,-1.68667 -0.45916,-0.87064 -0.83391,-1.7784 -0.37367,-0.91261 -0.65441,-1.85534 -0.28369,-0.94088 -0.47064,-1.90598 -0.18696,-0.96508 -0.28231,-1.94286 -0.0953,-0.97778 -0.0895,-1.96606 0.002,-0.981579 0.10488,-1.961059 0.10001,-0.977602 0.29594,-1.941549 0.19298,-0.962051 0.4827,-1.902667 0.28973,-0.940615 0.66627,-1.849295 0.37654,-0.908684 0.84742,-1.773607 0.47087,-0.864931 1.01458,-1.680722 0.55151,-0.816602 1.17856,-1.573323 0.62704,-0.756716 1.32371,-1.449788 0.69667,-0.693073 1.45895,-1.315775 0.76712,-0.621632 1.58506,-1.163487 0.81604,-0.544801 1.68668,-1.003922 0.86876,-0.462078 1.78134,-0.83576 0.90966,-0.371809 1.85052,-0.655498 0.94273,-0.280732 1.90782,-0.467696 0.96619,-0.191807 1.94288,-0.282313 0.97966,-0.09239 1.96607,-0.08938 0.9816,0.002 1.95918,0.101921 0.9776,0.100012 1.94342,0.298905 0.96583,0.19889 1.90267,0.482712 0.94169,0.284888 1.8493,0.666258 0.90572,0.378418 1.77361,0.847412 0.86788,0.468991 1.68073,1.014592 0.81283,0.545598 1.57331,1.178554 0.76047,0.632954 1.44791,1.320761 0.69496,0.699628 1.31767,1.461902 0.61973,0.764152 1.16642,1.58315 0.54189,0.81791 1.00094,1.688606 0.46204,0.868774 0.83387,1.778408 0.37181,0.909643 0.6574,1.853467 0.28556,0.943796 0.46581,1.904868 0.19181,0.966171 0.28419,1.945809 0.0923,0.979658 0.0876,1.963146",
            fill: "#d4766c"
        });
    },
    "square": containerToDraw => {
        const { ctx, radius } = containerToDraw;
        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor("#ffe869");
        ctx.strokeStyle = containerToDraw.getRenderColor("#cfbc55");
        ctx.lineWidth = containerToDraw.radius / 5;
        ctx.rect(-radius, -radius, radius * 2, radius * 2);
        ctx.fill();
        ctx.stroke();
    },
    "shell": containerToDraw => {
        loadPathFromSVG({
            containerToDraw,
            pathS: "m 119.40962,8.2842863 q 2.17054,0.954677 4.28705,2.0129277 2.1165,1.058251 4.18797,2.220076 2.07147,1.161824 4.06638,2.422719 1.99492,1.260895 3.9448,2.62086 1.94989,1.359965 3.81421,2.805491 1.86432,1.445526 3.6701,2.994625 1.80579,1.5491 3.5215,3.17025 1.71572,1.621151 3.35939,3.341372 1.64366,1.720221 3.18826,3.498983 1.5446,1.778762 3.01714,3.647589 1.47255,1.868826 2.83702,3.796194 1.36897,1.936374 2.63887,3.93129 1.2744,1.999419 2.44974,4.052876 1.17083,2.062464 2.24709,4.174463 1.06726,2.111999 2.03545,4.278036 0.96818,2.161534 1.82829,4.3681 0.85561,2.206566 1.60764,4.453661 0.75204,2.247094 1.38699,4.525712 0.63945,2.28312 1.17083,4.59326 0.52237,2.31014 0.93666,4.63829 0.4098,2.33716 0.70701,4.68332 0.29721,2.35067 0.47734,4.71485 0.18012,2.36418 0.24767,4.72836 0.0676,2.36417 0.0135,4.73736 -0.045,2.368679 -0.21615,4.728349 -0.16662,2.36418 -0.45032,4.71935 -0.2837,2.35067 -0.67548,4.68333 -0.40529,2.34166 -0.91415,4.6518 -0.50886,2.31014 -1.13481,4.59326 -0.62594,2.28312 -1.36446,4.53922 -0.73403,2.2516 -1.57612,4.46717 -0.85111,2.20657 -1.80128,4.37711 -1.14381,2.60284 -2.44073,5.13364 -1.29692,2.5308 -2.73795,4.98054 -1.44102,2.44973 -3.02614,4.81391 -1.58513,2.36418 -3.30085,4.62478 -1.71571,2.26061 -3.57103,4.42214 -1.85532,2.16154 -3.82772,4.20148 -1.9724,2.03995 -4.06188,3.97182 -2.08948,1.93187 -4.29155,3.72415 -2.20656,1.80127 -4.50319,3.46746 -2.30564,1.66618 -4.70134,3.19727 -2.4002,1.53108 -4.88146,2.91356 -2.48126,1.38248 -5.04358,2.62086 -2.55782,1.23388 -5.18768,2.31915 -2.62987,1.08077 -5.31378,2.00842 -2.6884,0.92766 -5.42635,1.69321 -2.73794,0.76554 -5.51641,1.36897 Q 74.157004,160.63641 30.003168,117.41023 16.565632,90.201921 35.136811,66.204391 87.000117,32.61055 119.40962,8.2842863",
            fill: "#fcdd86",
            stroke: {
                color: "#ccb36d",
                width: 15
            }
        });

        loadPathFromSVG({
            containerToDraw,
            pathS: "M 114.1679,148.48679 Q 78.007237,122.22865 53.370252,110.05651 m 80.967468,11.35706 Q 79.551837,106.86825 60.093523,101.03661 M 138.19245,83.010321 q -56.587163,3.37289 -76.815516,5.2237 M 123.80024,52.469644 Q 83.145387,71.022811 56.58103,78.052301",
            stroke: {
                color: "#ccb36d",
                width: 15
            }
        });
    },
    "sand": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.save();
        ctx.fillStyle = containerToDraw.getRenderColor("#e0c85c");
        ctx.strokeStyle = containerToDraw.getRenderColor("#b5a24b");
        ctx.lineWidth = containerToDraw.radius / 3;

        ctx.beginPath();

        ctx.moveTo(radius, 0);
        for (let i = 0; i < 6; i++) {
            ctx.rotate(P2 / 6);
            ctx.lineTo(radius, 0);
        }

        ctx.fill();
        ctx.stroke();

        ctx.restore();
    },
    "salt": containerToDraw => {
        loadPathFromSVG({
            containerToDraw,
            pathS: "M 157.44385,147.28624 93.81196,179.10744 28.250549,148.69667 11.236252,72.695979 59.075527,11.234786 l 79.812523,8.074581 49.87889,60.496442 z",
            fill: "#FFFFFF",
            stroke: {
                color: "#CFCFCF",
                width: 24
            }
        });
    },
    "uranium": containerToDraw => {
        containerToDraw.ctx.rotate(2);

        loadPathFromSVG({
            containerToDraw,
            pathS: "M 157.44385,147.28624 93.81196,179.10744 28.250549,148.69667 11.236252,72.695979 59.075527,11.234786 l 79.812523,8.074581 49.87889,60.496442 z",
            fill: "#63bf2e",
            stroke: {
                color: "#509b25",
                width: 24
            }
        });
    },
    "rose": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.beginPath();

        ctx.fillStyle = containerToDraw.getRenderColor("#ff94c9");
        ctx.lineWidth = containerToDraw.radius / 3;
        ctx.strokeStyle = containerToDraw.getRenderColor("#d078a3");

        ctx.arc(0, 0, radius, 0, Math.PI * 2);
        ctx.fill();
        ctx.stroke();
    },
    "rock": containerToDraw => {
        loadPathFromSVG({
            containerToDraw,
            pathS: "M 181.96132,105.24138 125.46614,189.53129 22.276177,159.15298 21.256099,51.877947 130.20426,10.645816 Z",
            fill: "#777777",
            stroke: {
                color: "#606060",
                width: 22
            }
        });
    },
    "rice": containerToDraw => {
        loadPathFromSVG({
            containerToDraw,
            pathS: "M 55.502392,15.311009 Q 139.04558,44.976081 182.47293,122.2551 q 0.75548,1.34727 1.37874,2.76379 0.62327,1.41652 1.10174,2.8834 0.47847,1.46689 0.81844,2.98414 0.32737,1.51095 0.50994,3.04079 0.18887,1.53614 0.22035,3.08487 0.0315,1.54243 -0.0881,3.08486 -0.11962,1.54244 -0.38403,3.06598 -0.26442,1.52355 -0.69252,3.01561 -0.41552,1.48578 -0.97583,2.92748 -0.56661,1.4417 -1.25913,2.82045 -0.70511,1.37874 -1.53613,2.68194 -0.83103,1.3032 -1.78797,2.51826 -0.95064,1.21506 -2.0209,2.32939 -1.07026,1.12062 -2.24754,2.12792 -1.17729,1.00731 -2.44271,1.8887 -1.26543,0.88139 -2.61269,1.64316 -1.34727,0.76177 -2.77009,1.38504 -1.41022,0.61697 -2.8834,1.09544 -1.46689,0.48477 -2.97784,0.81844 -1.51096,0.33367 -3.04709,0.51624 -1.53614,0.18257 -3.08487,0.21405 -1.54243,0.0378 -3.08486,-0.0818 -1.54244,-0.12591 -3.05969,-0.39033 -1.52354,-0.27071 -3.01561,-0.69252 -1.48577,-0.40922 -2.92747,-0.97583 -1.448,-0.56031 -2.82045,-1.25913 -1.38504,-0.69881 -2.68195,-1.52984 -1.30319,-0.83102 -2.51825,-1.78796 -1.21506,-0.95694 -2.32939,-2.0272 -1.11433,-1.07026 -2.12793,-2.24125 -1.0136,-1.17099 -1.88869,-2.44271 -0.8751,-1.27172 -1.64946,-2.61898 Q 95.7253,96.398934 34.437209,74.634894 q -1.460589,-0.51624 -2.858222,-1.17099 -1.397632,-0.66104 -2.726013,-1.44799 -1.328381,-0.79326 -2.574918,-1.71242 -1.246538,-0.91916 -2.392345,-1.95165 -1.145807,-1.03248 -2.190884,-2.184588 -1.045077,-1.152102 -1.964241,-2.379753 -0.919163,-1.22765 -1.725006,-2.568622 -0.805842,-1.340972 -1.460589,-2.719718 -0.654747,-1.378746 -1.189877,-2.851927 -0.535129,-1.47318 -0.900277,-2.952657 -0.365147,-1.479476 -0.610677,-3.028204 -0.24553,-1.548728 -0.314782,-3.072274 -0.06925,-1.523546 0,-3.084865 0.06296,-1.548729 0.289599,-3.084866 0.226643,-1.523545 0.598086,-3.021908 0.371443,-1.510955 0.887686,-2.958953 0.516243,-1.460589 1.177285,-2.858222 0.654747,-1.403928 1.447998,-2.732309 0.793252,-1.322085 1.712415,-2.568623 0.919164,-1.246537 1.95165,-2.392344 1.038781,-1.152103 2.178293,-2.190884 1.145807,-1.045077 2.386048,-1.964241 1.240242,-0.925459 2.562327,-1.725006 1.322085,-0.799547 2.719718,-1.460589 1.397633,-0.661043 2.851927,-1.196173 1.454293,-0.516242 2.958952,-0.900277 1.504659,-0.384034 3.021909,-0.610677 1.51725,-0.226643 3.07857,-0.308487 1.542432,-0.07555 3.084865,0 1.548728,0.06296 3.078569,0.2896 1.529842,0.226643 3.028205,0.598086 1.504659,0.371443 2.958952,0.88139",
            fill: "#FFFFFF",
            stroke: {
                color: "#CFCFCF",
                width: 10
            }
        });
    },
    "pincer": containerToDraw => {
        const { ctx } = containerToDraw;

        ctx.save();

        ctx.lineJoin = "round";

        loadPathFromSVG({
            containerToDraw,
            pathS: "M 165.08877,171.91495 Q 238.30901,-4.1418724 18.695189,48.612873 151.9989,98.326261 165.08877,171.91495",
            fill: "#333333",
            stroke: {
                color: "#292929",
                width: 20
            }
        });

        ctx.restore();
    },
    "4peas": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.save();

        for (let i = 0; i < 4; i++) {
            ctx.beginPath();

            ctx.fillStyle = containerToDraw.getRenderColor("#8ac255");
            ctx.strokeStyle = containerToDraw.getRenderColor("#74a348");
            ctx.lineWidth = containerToDraw.radius / 3;

            ctx.arc(radius, 0, radius, 0, P2);

            ctx.fill();
            ctx.stroke();

            ctx.rotate(P2 / 4);
        }

        ctx.restore();
    },
    "poison_peas": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.fillStyle = containerToDraw.getRenderColor("#ce74d8");
        ctx.strokeStyle = containerToDraw.getRenderColor("#a760b0");
        ctx.lineWidth = containerToDraw.radius / 3;

        ctx.beginPath();
        ctx.arc(0, 0, radius, 0, P2);

        ctx.fill();
        ctx.stroke();
    },
    "4poison_peas": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.save();

        for (let i = 0; i < 4; i++) {
            ctx.beginPath();

            ctx.fillStyle = containerToDraw.getRenderColor("#ce74d8");
            ctx.strokeStyle = containerToDraw.getRenderColor("#a760b0");
            ctx.lineWidth = containerToDraw.radius / 3;

            ctx.arc(radius, 0, radius, 0, P2);

            ctx.fill();
            ctx.stroke();

            ctx.rotate(P2 / 4);
        }

        ctx.restore();
    },
    "missile": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.save();
        ctx.beginPath();

        ctx.fillStyle = containerToDraw.getRenderColor("#333333");
        ctx.strokeStyle = containerToDraw.getRenderColor("#333333");
        ctx.lineWidth = 6;

        ctx.lineCap = "round";
        ctx.lineJoin = "round";

        ctx.moveTo(radius, 0);
        ctx.lineTo(-radius, radius * 0.6);
        ctx.lineTo(-radius, -radius * 0.6);
        ctx.lineTo(radius, 0);
        ctx.fill();
        ctx.stroke();

        ctx.restore();
    },
    "myt_big_missile": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        // 计算时间，用于动态效果
        const time = (Date.now() - containerToDraw.createdTime) / 1000;
        // 用时间创建波动效果 (0.8 到 1.2 之间波动)
        const fireWave = 0.8 + Math.sin(time * 10) * 0.2;
        // 火焰摆动效果
        const fireAngle = Math.sin(time * 5) * 0.1;

        ctx.save();
        ctx.beginPath();

        // 导弹主体 - 深灰色
        ctx.fillStyle = containerToDraw.getRenderColor("#333333");
        ctx.strokeStyle = containerToDraw.getRenderColor("#222222");
        ctx.lineWidth = radius * 0.1;

        // 绘制导弹主体 - 圆柱形
        ctx.beginPath();
        ctx.roundRect(-radius * 0.2, -radius * 0.5, radius * 1.5, radius, radius * 0.3);
        ctx.fill();
        ctx.stroke();

        // 绘制导弹尾部的喷射口
        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor("#555555");
        ctx.roundRect(-radius * 0.7, -radius * 0.4, radius * 0.5, radius * 0.8, radius * 0.2);
        ctx.fill();
        ctx.stroke();

        // 绘制导弹头部 - 锥形
        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor("#444444");
        ctx.moveTo(radius * 1.3, 0);
        ctx.lineTo(radius * 0.8, -radius * 0.4);
        ctx.lineTo(radius * 0.8, radius * 0.4);
        ctx.closePath();
        ctx.fill();
        ctx.stroke();

        // 绘制导弹上的标记
        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor("#FF3333");
        ctx.arc(radius * 0.4, 0, radius * 0.2, 0, Math.PI * 2);
        ctx.fill();

        // 保存当前上下文状态以便旋转火焰
        ctx.save();
        // 应用旋转角度使火焰产生摆动效果
        ctx.rotate(fireAngle);

        // 动态外层火焰 - 根据时间变化形状和大小
        ctx.beginPath();
        const outerFireColor = Math.sin(time * 3) > 0 ? "#FF6600" : "#FF4500";
        ctx.fillStyle = containerToDraw.getRenderColor(outerFireColor);

        // 动态长度的火焰
        const flameLength = radius * (1.5 * fireWave);
        ctx.moveTo(-radius * 0.7, -radius * 0.3);
        ctx.lineTo(-radius * 0.7 - flameLength, 0);
        ctx.lineTo(-radius * 0.7, radius * 0.3);
        ctx.closePath();
        ctx.fill();

        // 动态内层火焰
        ctx.beginPath();
        // 根据时间调整内层火焰颜色
        const innerFireColor = Math.sin(time * 8) > 0 ? "#FFCC00" : "#FFDD33";
        ctx.fillStyle = containerToDraw.getRenderColor(innerFireColor);

        // 内层火焰也有动态长度
        const innerFlameLength = radius * (1.2 * fireWave);
        ctx.moveTo(-radius * 0.7, -radius * 0.15);
        ctx.lineTo(-radius * 0.7 - innerFlameLength, 0);
        ctx.lineTo(-radius * 0.7, radius * 0.15);
        ctx.closePath();
        ctx.fill();

        // 绘制火焰粒子效果
        const particleCount = 3 + Math.floor(Math.random() * 3); // 随机粒子数量
        ctx.fillStyle = containerToDraw.getRenderColor("#FFFF66");

        for (let i = 0; i < particleCount; i++) {
            const particleSize = radius * 0.08 * Math.random();
            const particleX = -radius * 0.7 - radius * (0.5 + Math.random() * 0.6 * fireWave);
            const particleY = (Math.random() - 0.5) * radius * 0.4;

            ctx.beginPath();
            ctx.arc(particleX, particleY, particleSize, 0, Math.PI * 2);
            ctx.fill();
        }

        // 恢复旋转前的上下文
        ctx.restore();

        ctx.restore();
    },
    "lightning": containerToDraw => {
        loadPathFromSVG({
            containerToDraw,
            pathS: "m 141.99216,100.411 38.26506,26.21668 -46.36462,-1.28263 15.54593,43.69248 -36.7568,-28.28907 L 99.576364,185.24259 86.470987,140.74846 49.714199,169.03753 65.260124,125.34505 18.8955,126.62768 57.160566,100.411 18.8955,74.200269 65.260124,75.482893 49.714199,31.778534 86.470987,60.073543 99.576364,15.57348 112.68173,60.067605 149.43853,31.778534 133.8926,75.476953 180.25722,74.194329 Z",
            fill: "#29f2e5",
            stroke: {
                width: 15,
                color: "#21c4b9"
            }
        });
    },
    "leaf": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.save();

        ctx.translate(0, radius * 0.1);
        ctx.scale(1.2, 1.2);

        ctx.lineCap = "round";
        ctx.lineJoin = "round";

        loadPathFromSVG({
            containerToDraw,
            pathS: "M 31.15503,151.08372 9.5234003,174.61933",
            fill: "#2e933c",
            stroke: {
                width: 20,
                color: "#2e933c"
            }
        });

        loadPathFromSVG({
            containerToDraw,
            pathS: "M 31.15503,151.08372 C -1.4140015,74.708284 63.473975,4.09096 160.93013,9.853512 171.87183,109.76537 106.9847,180.37826 31.15503,151.08372",
            fill: "#39b54a",
            stroke: {
                width: 20,
                color: "#2e933c"
            }
        });

        loadPathFromSVG({
            containerToDraw,
            pathS: "M 57.109529,122.83574 Q 89.269099,73.861071 128.48699,45.157742",
            fill: "#2e933c",
            stroke: {
                width: 20,
                color: "#2e933c"
            }
        });

        ctx.restore();
    },
    "jelly": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor("#ffffff");
        ctx.strokeStyle = containerToDraw.getRenderColor("#fa9cff");

        ctx.lineWidth = 4;

        ctx.globalAlpha = containerToDraw.getAlpha(0.25);
        ctx.arc(
            0, 0,
            radius, 0, P2
        );
        ctx.fill();

        ctx.globalAlpha = containerToDraw.getAlpha(0.7);
        ctx.stroke();

        ctx.globalAlpha = containerToDraw.getAlpha(0.35);
        loadPathFromSVG({
            containerToDraw,
            pathS: "m 177.9056,100.27907 q 0,1.90683 -0.0932,3.81365 -0.0933,1.90682 -0.2798,3.80328 -0.18654,1.89646 -0.46635,3.78773 -0.2798,1.89128 -0.65288,3.75665 -0.37307,1.87574 -0.83941,3.72555 -0.46116,1.84983 -1.01559,3.67892 -0.55443,1.82392 -1.19176,3.61675 -0.6477,1.79801 -1.37831,3.55975 -0.72542,1.76174 -1.5441,3.48721 -0.8187,1.72546 -1.71511,3.40947 -0.9016,1.68402 -1.88092,3.31622 -0.9845,1.63737 -2.04154,3.22813 -1.06222,1.58555 -2.19699,3.11931 -1.13995,1.52856 -2.34725,3.00532 -1.20731,1.47675 -2.48716,2.88614 -1.27986,1.40939 -2.63225,2.76696 -1.3472,1.34721 -2.76697,2.62706 -1.40939,1.28503 -2.88613,2.49234 -1.47675,1.21249 -3.00532,2.34725 -1.53375,1.13996 -3.11932,2.197 -1.59074,1.06222 -3.22294,2.04154 -1.63738,0.9845 -3.32139,1.88092 -1.68401,0.89641 -3.40948,1.70992 -1.72546,0.81351 -3.48721,1.55447 -1.76173,0.74097 -3.55974,1.36794 -1.79802,0.62697 -3.62193,1.19695 -1.82392,0.56997 -3.67893,1.02077 -1.84464,0.46634 -3.72037,0.82905 -1.86537,0.37825 -3.75665,0.65806 -1.88609,0.2798 -3.78255,0.46634 -1.90164,0.18654 -3.80847,0.27981 -1.90682,0.0933 -3.81363,0.0933 -1.906825,0 -3.81365,-0.0933 -1.906825,-0.0932 -3.803277,-0.27981 -1.896463,-0.18654 -3.78774,-0.46634 -1.891276,-0.27981 -3.756642,-0.65287 -1.865377,-0.37308 -3.725556,-0.83424 -1.849828,-0.46635 -3.678932,-1.02077 -1.823917,-0.55443 -3.616737,-1.19177 -1.798007,-0.64769 -3.559752,-1.37829 -1.761736,-0.72543 -3.487202,-1.54412 -1.725467,-0.81869 -3.409481,-1.7151 -1.684015,-0.9016 -3.316213,-1.88092 -1.63738,-0.98449 -3.228126,-2.04154 -1.585563,-1.05704 -3.11413,-2.197 -1.533749,-1.13994 -3.005318,-2.34725 -1.481932,-1.20731 -2.891322,-2.48716 -1.414572,-1.28503 -2.766966,-2.63224 -1.347211,-1.34721 -2.627061,-2.76696 -1.285032,-1.40939 -2.492342,-2.88614 -1.212489,-1.47676 -2.347256,-3.00532 -1.139948,-1.53376 -2.196991,-3.11931 -1.062224,-1.59076 -2.041543,-3.22295 -0.9845,-1.63738 -1.880915,-3.31621 -0.896413,-1.6892 -1.709922,-3.41466 -0.81869,-1.72029 -1.554474,-3.48721 -0.725422,-1.76174 -1.367937,-3.55975 -0.642517,-1.79283 -1.196946,-3.62192 -0.554429,-1.82392 -1.01559,-3.67892 -0.466342,-1.84464 -0.839416,-3.72038 -0.373075,-1.86537 -0.65288,-3.75665 -0.279805,-1.8861 -0.466342,-3.78256 -0.186537,-1.90163 -0.279805,-3.80845 -0.09327,-1.90682 -0.09327,-3.81365 0,-1.906824 0.09327,-3.813639 0.09327,-1.906825 0.279805,-3.803288 0.186537,-1.896452 0.466342,-3.782553 0.279805,-1.891276 0.65288,-3.761829 0.373074,-1.870552 0.839416,-3.725556 0.466342,-1.855004 1.01559,-3.678921 0.549247,-1.823918 1.191764,-3.616746 0.647697,-1.798009 1.3783,-3.559747 0.725422,-1.761737 1.544112,-3.487204 0.81869,-1.725467 1.715103,-3.409481 0.901596,-1.684014 1.880915,-3.316213 0.984501,-1.637379 2.041543,-3.222944 1.062225,-1.590746 2.196991,-3.119312 1.139948,-1.533748 2.347256,-3.005318 1.20731,-1.47675 2.48716,-2.891323 1.285032,-1.414571 2.632243,-2.761783 1.347213,-1.347211 2.766966,-2.632243 1.40939,-1.279851 2.886141,-2.492341 1.47675,-1.212491 3.005317,-2.347257 1.533749,-1.139948 3.119312,-2.196991 1.590746,-1.062224 3.222945,-2.041543 1.637379,-0.984501 3.321394,-1.880914 1.684014,-0.896414 3.409481,-1.709922 1.725466,-0.813509 3.487202,-1.554475 1.761745,-0.740967 3.559752,-1.367938 1.798006,-0.626971 3.621924,-1.196945 1.823917,-0.569974 3.678921,-1.01559 1.844641,-0.466343 3.72038,-0.839417 1.865366,-0.367892 3.756642,-0.652878 1.886101,-0.279806 3.782554,-0.466344 1.901638,-0.186536 3.808463,-0.279805 1.906825,-0.09327 3.81365,-0.09327 1.90681,0 3.81363,0.09327 1.90683,0.09327 3.80328,0.279805 1.89647,0.186538 3.78774,0.466344 1.8861,0.284986 3.75665,0.652878 1.87573,0.373074 3.72556,0.839417 1.84982,0.466342 3.67892,1.01559 1.82392,0.554429 3.61675,1.196945 1.79801,0.642517 3.55974,1.37312 1.76175,0.725421 3.48721,1.544111 1.72547,0.81869 3.40948,1.715104 1.68401,0.901595 3.31621,1.880914 1.63738,0.9845 3.22812,2.041543 1.58557,1.062224 3.11414,2.196991 1.53375,1.139948 3.00532,2.347257 1.48192,1.21249 2.89131,2.487159 1.41458,1.285033 2.76697,2.637425 1.34722,1.347212 2.62706,2.761783 1.28504,1.414573 2.49235,2.886141 1.21249,1.476752 2.34725,3.005319 1.13995,1.533747 2.19699,3.124493 1.06223,1.585565 2.04154,3.222944 0.98451,1.632199 1.88092,3.316213 0.89641,1.684014 1.70992,3.409481 0.81351,1.725467 1.55448,3.487204 0.72542,1.761738 1.36793,3.559747 0.64252,1.792828 1.19695,3.621922 0.55443,1.823917 1.01559,3.678932 0.46634,1.849817 0.83941,3.720369 0.37308,1.865377 0.65288,3.756653 0.27981,1.88609 0.46635,3.782553 0.18653,1.901639 0.2798,3.808464 0.0932,1.906815 0.0932,3.813639",
            fill: "#fa9cff"
        });

        loadPathFromSVG({
            containerToDraw,
            pathS: "m 81.678445,74.371162 q 0,1.088132 -0.108808,2.176264 -0.103621,1.088137 -0.321258,2.155543 -0.207264,1.072583 -0.528523,2.114079 -0.316082,1.046682 -0.735786,2.051906 -0.414528,1.010409 -0.932688,1.969008 -0.512974,0.963775 -1.119218,1.870542 -0.606243,0.906777 -1.295395,1.751382 -0.689151,0.844594 -1.466386,1.616653 -0.777246,0.772049 -1.611478,1.4612 -0.834232,0.689152 -1.751371,1.295395 -0.906778,0.61143 -1.865366,1.124404 -0.968961,0.512985 -1.974188,0.932688 -1.010408,0.414529 -2.051906,0.7306 -1.04668,0.316083 -2.114085,0.528523 -1.072588,0.217626 -2.155539,0.321258 -1.088132,0.103621 -2.176264,0.103621 -1.088132,0 -2.176264,-0.103621 -1.088132,-0.103621 -2.155539,-0.321258 -1.072587,-0.207264 -2.114085,-0.528523 -1.04668,-0.310896 -2.051907,-0.7306 -1.010408,-0.419703 -1.969001,-0.932688 -0.963774,-0.518149 -1.870551,-1.119217 -0.906777,-0.606244 -1.751375,-1.300582 -0.844597,-0.694327 -1.616653,-1.4612 -0.766874,-0.777234 -1.461206,-1.616653 -0.694332,-0.844605 -1.295396,-1.751382 -0.611426,-0.906767 -1.124403,-1.865366 -0.512977,-0.963775 -0.932685,-1.968998 -0.414526,-1.01041 -0.730602,-2.057092 -0.316078,-1.041496 -0.533704,-2.114079 -0.207263,-1.067406 -0.316076,-2.155543 -0.108814,-1.088132 -0.103632,-2.176264 0,-1.088132 0.103632,-2.176265 0.103632,-1.088132 0.316076,-2.155538 0.212445,-1.067405 0.533704,-2.114084 0.310893,-1.041499 0.730602,-2.051907 0.419708,-1.005228 0.932685,-1.969001 0.518158,-0.963775 1.119221,-1.86537 0.606246,-0.911958 1.300578,-1.756556 0.694332,-0.839417 1.461206,-1.611473 0.777237,-0.777237 1.616653,-1.466387 0.844598,-0.68915 1.751375,-1.295396 0.906777,-0.606245 1.865369,-1.124403 0.958594,-0.518158 1.969002,-0.932685 1.010408,-0.414526 2.057088,-0.730603 1.041498,-0.316076 2.114085,-0.528521 1.072588,-0.212445 2.155539,-0.321258 1.08295,-0.108814 2.176264,-0.103633 1.088132,0 2.176264,0.103633 1.088132,0.103632 2.155539,0.321258 1.067405,0.207263 2.114085,0.528521 1.04668,0.321258 2.051906,0.735785 1.005227,0.414526 1.969001,0.932684 0.963775,0.512977 1.865366,1.119222 0.911964,0.606246 1.756558,1.295396 0.839419,0.694331 1.611478,1.466387 0.777235,0.772056 1.466386,1.611473 0.689152,0.844598 1.295395,1.751375 0.606244,0.906776 1.124404,1.865369 0.512974,0.968955 0.932678,1.974183 0.414528,1.010408 0.73061,2.051907 0.316072,1.046679 0.528523,2.114084 0.212439,1.072588 0.321258,2.155538 0.103621,1.088133 0.103621,2.176265 m 33.312392,-48.11617 q 0,0.725421 -0.0725,1.450843 -0.0674,0.725421 -0.20726,1.440479 -0.14509,0.709877 -0.35754,1.40939 -0.20726,0.694333 -0.48706,1.367939 -0.27981,0.673605 -0.62179,1.31094 -0.34198,0.637334 -0.74615,1.243579 -0.40417,0.606245 -0.86532,1.171038 -0.46635,0.559611 -0.97932,1.077769 -0.51297,0.518158 -1.07258,0.974137 -0.55962,0.455979 -1.17104,0.865324 -0.61143,0.409345 -1.24359,0.746149 -0.63215,0.336802 -1.31612,0.621789 -0.6736,0.279805 -1.36794,0.49225 -0.69432,0.207263 -1.40939,0.352348 -0.70987,0.139903 -1.4353,0.207263 -0.72541,0.07772 -1.45083,0.07772 -0.725422,0 -1.450847,-0.07254 -0.725424,-0.07255 -1.435299,-0.212445 -0.715052,-0.145085 -1.40939,-0.352348 -0.699513,-0.212445 -1.36793,-0.492251 Q 93.844841,39.65456 93.202324,39.312576 92.559808,38.970588 91.958751,38.566424 91.357683,38.162261 90.787712,37.7011 90.217741,37.239939 89.715119,36.726962 89.212507,36.213985 88.735806,35.649193 88.259095,35.0844 87.870477,34.483338 87.48186,33.882274 87.124329,33.239758 86.782346,32.59206 86.502547,31.923636 86.227913,31.25003 86.015473,30.555698 85.808209,29.856184 85.663129,29.146307 85.518038,28.43125 85.450678,27.705829 q -0.06737,-0.725422 -0.0725,-1.450843 m 48.116162,55.52065 q 0,0.725414 -0.0725,1.450838 -0.0725,0.725424 -0.21244,1.4353 -0.1399,0.709876 -0.35235,1.409389 -0.21244,0.699514 -0.49225,1.367941 -0.2798,0.668416 -0.62178,1.316119 -0.34199,0.63733 -0.74615,1.243584 -0.40417,0.606244 -0.86533,1.165853 -0.46116,0.564795 -0.97414,1.077769 -0.51816,0.51816 -1.07776,0.974136 -0.5648,0.466339 -1.16586,0.86533 -0.60624,0.404155 -1.24358,0.746137 -0.64769,0.347169 -1.31612,0.621792 -0.6736,0.27981 -1.36794,0.49225 -0.69952,0.207264 -1.40939,0.352355 -0.71506,0.139894 -1.44048,0.21244 -0.72542,0.0725 -1.45084,0.0725 -0.72543,0 -1.45084,-0.0725 -0.72543,-0.0725 -1.4353,-0.21244 -0.70988,-0.139905 -1.40939,-0.352355 -0.69952,-0.21244 -1.36794,-0.49225 -0.67361,-0.274623 -1.31095,-0.621792 -0.64251,-0.341982 -1.24357,-0.746137 -0.61143,-0.404166 -1.17104,-0.86533 -0.55961,-0.461163 -1.07777,-0.974136 -0.51816,-0.512974 -0.97413,-1.077769 -0.46635,-0.559609 -0.86533,-1.165853 -0.39898,-0.606254 -0.74615,-1.243584 -0.34716,-0.63733 -0.62178,-1.316119 -0.27981,-0.673614 -0.49226,-1.367941 -0.20726,-0.694327 -0.35235,-1.409389 -0.1399,-0.715062 -0.21244,-1.4353 -0.0725,-0.725424 -0.0725,-1.450838 0,-0.725424 0.0725,-1.450848 0.0725,-0.725424 0.21244,-1.440476 0.13991,-0.715062 0.35235,-1.409389 0.21245,-0.694338 0.49226,-1.367938 0.2798,-0.673606 0.62178,-1.31094 0.34199,-0.637334 0.74615,-1.243579 0.40416,-0.606246 0.86533,-1.171038 0.46116,-0.564793 0.97413,-1.077768 0.51298,-0.512977 1.07777,-0.974138 0.5648,-0.461161 1.16585,-0.865324 0.60107,-0.404164 1.24359,-0.746149 0.64251,-0.341984 1.31612,-0.62179 0.6736,-0.279805 1.36794,-0.487068 0.69433,-0.207263 1.40939,-0.357529 0.71506,-0.150266 1.4353,-0.207263 0.72024,-0.057 1.45084,-0.07255 0.7306,-0.01555 1.45084,0.06736 0.72024,0.08291 1.44048,0.212445 0.72024,0.129539 1.40939,0.357529 0.68915,0.227989 1.36794,0.487068 0.67879,0.259079 1.31094,0.62179 0.63215,0.362711 1.24358,0.746149 0.61143,0.383436 1.17104,0.865323 0.5596,0.466342 1.07776,0.974138 0.51298,0.518158 0.97414,1.077769 0.46634,0.564792 0.86533,1.165856 0.40416,0.606245 0.74615,1.24358 0.34198,0.647697 0.62178,1.316121 0.27981,0.673604 0.49225,1.367942 0.20726,0.699513 0.35235,1.409389 0.13991,0.715052 0.20727,1.440476 0.0777,0.725424 0.0777,1.450848 M 52.065845,122.48732 q 0,0.54406 -0.05181,1.08813 -0.05182,0.54406 -0.155448,1.07777 -0.103632,0.5337 -0.269442,1.05705 -0.155447,0.51815 -0.36271,1.02595 -0.212445,0.50261 -0.466343,0.98449 -0.259079,0.48189 -0.564792,0.93269 -0.300532,0.45598 -0.647698,0.88087 -0.347167,0.41453 -0.730603,0.80314 -0.388618,0.38345 -0.808328,0.7306 -0.424889,0.34717 -0.875687,0.65288 -0.450797,0.30572 -0.932685,0.55962 -0.481886,0.25389 -0.9845,0.46634 -0.507795,0.20727 -1.031135,0.36271 -0.518158,0.16063 -1.057042,0.26426 -0.533703,0.10882 -1.077769,0.16063 -0.538885,0.0519 -1.088133,0.0519 -0.544066,0 -1.088132,-0.0519 -0.538885,-0.0519 -1.077769,-0.15544 -0.533703,-0.10882 -1.057042,-0.26945 -0.523341,-0.16063 -1.025954,-0.36271 -0.502613,-0.20208 -0.9845,-0.46634 -0.481888,-0.26426 -0.932685,-0.55962 -0.450798,-0.29534 -0.875687,-0.65288 -0.424891,-0.35752 -0.808327,-0.7306 -0.383437,-0.37306 -0.730603,-0.80832 -0.347167,-0.43526 -0.647699,-0.87569 -0.305713,-0.4508 -0.559611,-0.93269 -0.259079,-0.48188 -0.466342,-0.98449 -0.207263,-0.50262 -0.367892,-1.02595 -0.160629,-0.52335 -0.264261,-1.05705 -0.103632,-0.53371 -0.160629,-1.07777 -0.057,-0.54407 -0.05181,-1.08813 0.0051,-0.54407 0.05181,-1.08814 0.04663,-0.54406 0.155448,-1.07777 0.108813,-0.5337 0.269442,-1.05703 0.160629,-0.52335 0.362711,-1.02596 0.202081,-0.50261 0.466342,-0.9845 0.264262,-0.48189 0.564792,-0.93269 0.300532,-0.45079 0.647699,-0.88086 0.347166,-0.43007 0.730603,-0.80315 0.383436,-0.37307 0.808327,-0.73579 0.424889,-0.3627 0.875687,-0.64769 0.450797,-0.28498 0.932685,-0.55961 0.481887,-0.27463 0.9845,-0.46635 0.502613,-0.19171 1.025954,-0.3627 0.523339,-0.17099 1.057042,-0.26945 0.533703,-0.0985 1.077769,-0.15544 0.544066,-0.057 1.088132,-0.057 0.544066,0 1.088133,0.0519 0.544066,0.0519 1.077769,0.16063 0.533702,0.10882 1.057042,0.26426 0.52334,0.15546 1.025953,0.3679 0.502614,0.21245 0.984501,0.46635 0.481888,0.25389 0.937866,0.55961 0.455979,0.30571 0.875687,0.64769 0.41971,0.34198 0.808328,0.73578 0.388619,0.39381 0.725421,0.80315 0.352348,0.42489 0.65288,0.88087 0.305713,0.4508 0.559611,0.93269 0.259079,0.48188 0.466342,0.98449 0.207263,0.50262 0.367892,1.02596 0.160629,0.52334 0.264261,1.05704 0.103632,0.5337 0.160629,1.07776 0.057,0.54408 0.05181,1.08815 m 92.527505,22.20825 q 0,1.45085 -0.13991,2.90169 -0.14508,1.44566 -0.42489,2.8706 -0.28498,1.43011 -0.70987,2.81878 -0.41971,1.39384 -0.97932,2.73587 -0.55443,1.34721 -1.24358,2.62706 -0.68396,1.28503 -1.4923,2.49234 -0.80832,1.21249 -1.73064,2.33172 -0.92233,1.12958 -1.94828,2.15554 -1.03113,1.03113 -2.15554,1.95345 -1.1244,0.92232 -2.33171,1.73064 -1.2073,0.80834 -2.49233,1.4923 -1.28504,0.68398 -2.62707,1.24359 -1.34203,0.5596 -2.73588,0.97931 -1.39384,0.41971 -2.81878,0.7047 -1.42493,0.28498 -2.87577,0.42489 -1.45085,0.14508 -2.90169,0.14508 -1.45085,0 -2.90168,-0.14508 -1.45085,-0.14508 -2.87578,-0.42489 -1.42494,-0.27981 -2.81879,-0.7047 -1.38866,-0.42489 -2.73587,-0.9845 -1.34203,-0.55442 -2.62706,-1.2384 -1.279844,-0.68396 -2.487156,-1.4923 -1.212487,-0.80832 -2.336891,-1.73064 -1.124404,-0.92232 -2.150362,-1.95345 -1.025947,-1.03114 -1.953449,-2.15036 -0.927513,-1.11922 -1.730658,-2.33172 -0.803146,-1.21249 -1.492287,-2.49752 -0.689151,-1.27985 -1.243584,-2.62706 -0.559609,-1.34721 -0.984499,-2.73587 -0.414528,-1.38867 -0.699513,-2.81878 -0.284986,-1.42494 -0.430077,-2.8706 -0.139894,-1.45084 -0.139894,-2.90169 0,-1.45602 0.139894,-2.90168 0.145091,-1.45084 0.430077,-2.87578 0.279799,-1.43011 0.704689,-2.81878 0.419714,-1.39385 0.979323,-2.73588 0.554433,-1.34721 1.243584,-2.62706 0.683965,-1.28504 1.492287,-2.49234 0.808332,-1.21249 1.730658,-2.33171 0.922315,-1.12959 1.953449,-2.15554 1.025958,-1.03113 2.150362,-1.95346 1.124404,-0.92231 2.331705,-1.73065 1.212498,-0.80832 2.492342,-1.49229 1.28503,-0.68397 2.62706,-1.24358 1.34721,-0.55443 2.73587,-0.97932 1.39385,-0.4197 2.81879,-0.70469 1.43011,-0.285 2.87578,-0.42489 1.45083,-0.14509 2.90168,-0.14509 1.45084,0 2.90169,0.14509 1.45084,0.14508 2.87577,0.42489 1.42494,0.2798 2.81878,0.70469 1.39385,0.42489 2.73588,0.9845 1.34721,0.55443 2.62707,1.2384 1.27984,0.68397 2.48715,1.49229 1.2073,0.80834 2.33689,1.73065 1.12958,0.92233 2.15554,1.95346 1.02595,1.02595 1.94828,2.15035 0.92232,1.12441 1.73064,2.33172 0.80834,1.21248 1.49749,2.49752 0.68914,1.28503 1.24357,2.62706 0.55443,1.34203 0.97414,2.73588 0.41971,1.39384 0.70987,2.81878 0.29017,1.42494 0.42489,2.8706 0.13991,1.45084 0.13991,2.90168",
            fill: "#fa9cff"
        });
    },
    "light": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.beginPath();

        ctx.fillStyle = containerToDraw.getRenderColor("#FFFFFF");
        ctx.lineWidth = containerToDraw.radius ** 0.5;
        ctx.strokeStyle = containerToDraw.getRenderColor("#CFCFCF");

        ctx.arc(0, 0, radius, 0, Math.PI * 2);
        ctx.fill();
        ctx.stroke();
    },
    "iris": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.beginPath();

        ctx.fillStyle = containerToDraw.getRenderColor("#ce76db");
        ctx.lineWidth = containerToDraw.radius ** 0.5;
        ctx.strokeStyle = containerToDraw.getRenderColor("#a760b1");

        ctx.arc(0, 0, radius, 0, Math.PI * 2);
        ctx.fill();
        ctx.stroke();
    },
    "pollen": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.beginPath();

        ctx.fillStyle = containerToDraw.getRenderColor("#ffe763");
        ctx.lineWidth = containerToDraw.radius ** 0.5;
        ctx.strokeStyle = containerToDraw.getRenderColor("#cfbb50");

        ctx.arc(0, 0, radius, 0, Math.PI * 2);
        ctx.fill();
        ctx.stroke();
    },
    "powder": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        if (containerToDraw.noCustoming) {
            ctx.save();

            for (let i = 0; i < 10; i++) {
                ctx.rotate(P2 / 10);
                const x = i % 4;
                const y = i * 0.7;
                ctx.beginPath();
                ctx.fillStyle = containerToDraw.getRenderColor("#ffffff");
                ctx.arc(x, y, radius * 0.5, 0, Math.PI * 2);
                ctx.fill();
            }

            ctx.restore();
        } else {
            if ((Date.now() - containerToDraw.transing) < 50 && containerToDraw.dotsData) {
                for (let i = 0; i < 10; i++) {
                    const x = containerToDraw.dotsData[i].x;
                    const y = containerToDraw.dotsData[i].y;
                    ctx.beginPath();
                    ctx.fillStyle = containerToDraw.getRenderColor("#ffffff");
                    ctx.arc(x, y, radius * 0.5, 0, Math.PI * 2);
                    ctx.fill();
                }

                return;
            }

            containerToDraw.transing = Date.now();

            containerToDraw.dotsData = [];

            for (let i = 0; i < 10; i++) {
                const x = Math.random() * radius * 1.5 - radius;
                const y = Math.random() * radius * 1.5 - radius;
                ctx.beginPath();
                ctx.fillStyle = containerToDraw.getRenderColor("#ffffff");
                ctx.arc(x, y, radius * 0.5, 0, Math.PI * 2);
                ctx.fill();

                containerToDraw.dotsData.push({
                    x, y
                });
            }
        }
    },
    "honey": containerToDraw => {
        loadPathFromSVG({
            containerToDraw,
            pathS: "m 186.38765,99.843278 q -7.79487,45.128242 -42.97849,74.447922 -42.97849,15.80856 -85.95699,0 Q 22.268554,144.97152 14.473676,99.843278 22.268554,54.715035 57.45217,25.400825 q 42.9785,-15.808559 85.95699,0 35.18362,29.31968 42.97849,74.447923",
            fill: "#f7cf2f",
            stroke: {
                color: "#c8a826",
                width: 25
            }
        });
    },
    "heaviest": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor("#333333");
        ctx.strokeStyle = containerToDraw.getRenderColor("#292929");
        ctx.lineWidth = 4;
        ctx.arc(
            0, 0,
            radius, 0, P2
        );
        ctx.fill();

        ctx.stroke();

        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor("#cccccc");
        ctx.arc(
            radius * 0.4, -radius * 0.4,
            radius * 0.3, 0, P2
        );
        ctx.fill();
    },
    "wing": containerToDraw => {
        const { ctx } = containerToDraw;
        ctx.lineCap = "round";
        ctx.lineJoin = "round";

        loadPathFromSVG({
            containerToDraw,
            pathS: "m 174.67412,9.7967501 q 1.2984,2.0207459 2.49622,4.1054969 1.19781,2.084751 2.29505,4.224364 1.09267,2.144185 2.08018,4.334088 0.98751,2.194474 1.86988,4.434667 0.88236,2.240193 1.64585,4.512389 0.7635,2.272196 1.42641,4.594682 0.66291,2.322486 1.19782,4.658687 0.5349,2.336201 0.96922,4.708977 0.43433,2.372776 0.7315,4.754695 0.31088,2.377348 0.5029,4.777555 0.19201,2.400207 0.26516,4.800413 0.0777,2.404779 0.032,4.809558 -0.0457,2.404776 -0.20573,4.809556 -0.16001,2.40478 -0.43889,4.7867 -0.27888,2.38192 -0.67663,4.76384 -0.39775,2.3682 -0.9098,4.71812 -0.51204,2.35449 -1.14295,4.6724 -0.62177,2.32249 -1.3624,4.61297 -0.74064,2.29048 -1.591,4.53525 -0.85036,2.24476 -1.81501,4.452952 -0.96008,2.20819 -2.02532,4.36152 -1.06981,2.15333 -2.24019,4.2518 -1.17496,2.10304 -2.44593,4.14207 -1.27554,2.03903 -2.65165,4.01406 -1.37612,1.97503 -2.83453,3.88605 -1.45842,1.91102 -3.02655,3.7306 -1.56814,1.81959 -3.20942,3.58431 -1.64128,1.76473 -3.37858,3.41973 -1.73729,1.655 -3.54316,3.25513 -1.80587,1.60014 -3.69403,3.07227 -1.88816,1.47213 -3.8449,2.88939 -1.95674,1.41727 -3.98206,2.69738 -2.02532,1.28011 -4.11007,2.49621 -2.08475,1.21611 -4.22436,2.29506 -2.14419,1.09723 -4.33409,2.08018 -2.19448,0.98751 -4.43467,1.86987 -2.23562,0.87779 -4.51239,1.64586 -2.28134,0.77263 -4.59468,1.42641 -2.31334,0.65834 -4.65412,1.19781 -2.34534,0.54405 -4.70897,0.96923 -2.36821,0.42518 -4.7547,0.73149 -2.38649,0.31088 -4.78212,0.5029 -2.40021,0.19202 -4.80042,0.26517 -2.40478,0.0777 -4.80955,0.032 -2.40478,-0.0457 -4.80042,-0.20573 -2.39563,-0.16002 -4.79127,-0.4389 -2.39563,-0.27888 -4.76384,-0.67663 -2.3682,-0.39775 -4.71812,-0.90979 -2.34992,-0.51204 -4.6724,-1.13838 -2.322487,-0.62634 -4.61297,-1.36698 -2.285911,-0.74063 -4.535248,-1.59099 -2.249336,-0.85036 -4.452955,-1.81502 -2.20819,-0.96008 -4.361518,-2.02531 -2.153329,-1.06981 -4.251795,-2.2402 -2.103039,-1.17496 -4.142071,-2.44592 -2.039033,-1.27554 -4.014061,-2.64709 -1.975027,-1.37154 -3.881477,-2.8391 -1.90645,-1.46755 -3.735179,-3.02655 -1.828729,-1.55899 -3.584309,-3.20941 -1.755579,-1.65043 -3.419723,-3.37858 -1.664143,-1.72815 -3.250566,-3.54316 -1.586422,-1.81045 -3.076836,-3.69404 -1.490414,-1.88359 -2.889392,-3.8449 -1.394406,-1.95674 -2.6973753,-3.98206 Q 127.52034,117.68719 174.66955,9.7967501",
            fill: "#FFFFFF",
            stroke: {
                color: "#CFCFCF",
                width: 20
            }
        });
    },
    "faster_wing": containerToDraw => {
        const { ctx } = containerToDraw;
        ctx.lineCap = "round";
        ctx.lineJoin = "round";

        loadPathFromSVG({
            containerToDraw,
            pathS: "m 174.67412,9.7967501 q 1.2984,2.0207459 2.49622,4.1054969 1.19781,2.084751 2.29505,4.224364 1.09267,2.144185 2.08018,4.334088 0.98751,2.194474 1.86988,4.434667 0.88236,2.240193 1.64585,4.512389 0.7635,2.272196 1.42641,4.594682 0.66291,2.322486 1.19782,4.658687 0.5349,2.336201 0.96922,4.708977 0.43433,2.372776 0.7315,4.754695 0.31088,2.377348 0.5029,4.777555 0.19201,2.400207 0.26516,4.800413 0.0777,2.404779 0.032,4.809558 -0.0457,2.404776 -0.20573,4.809556 -0.16001,2.40478 -0.43889,4.7867 -0.27888,2.38192 -0.67663,4.76384 -0.39775,2.3682 -0.9098,4.71812 -0.51204,2.35449 -1.14295,4.6724 -0.62177,2.32249 -1.3624,4.61297 -0.74064,2.29048 -1.591,4.53525 -0.85036,2.24476 -1.81501,4.452952 -0.96008,2.20819 -2.02532,4.36152 -1.06981,2.15333 -2.24019,4.2518 -1.17496,2.10304 -2.44593,4.14207 -1.27554,2.03903 -2.65165,4.01406 -1.37612,1.97503 -2.83453,3.88605 -1.45842,1.91102 -3.02655,3.7306 -1.56814,1.81959 -3.20942,3.58431 -1.64128,1.76473 -3.37858,3.41973 -1.73729,1.655 -3.54316,3.25513 -1.80587,1.60014 -3.69403,3.07227 -1.88816,1.47213 -3.8449,2.88939 -1.95674,1.41727 -3.98206,2.69738 -2.02532,1.28011 -4.11007,2.49621 -2.08475,1.21611 -4.22436,2.29506 -2.14419,1.09723 -4.33409,2.08018 -2.19448,0.98751 -4.43467,1.86987 -2.23562,0.87779 -4.51239,1.64586 -2.28134,0.77263 -4.59468,1.42641 -2.31334,0.65834 -4.65412,1.19781 -2.34534,0.54405 -4.70897,0.96923 -2.36821,0.42518 -4.7547,0.73149 -2.38649,0.31088 -4.78212,0.5029 -2.40021,0.19202 -4.80042,0.26517 -2.40478,0.0777 -4.80955,0.032 -2.40478,-0.0457 -4.80042,-0.20573 -2.39563,-0.16002 -4.79127,-0.4389 -2.39563,-0.27888 -4.76384,-0.67663 -2.3682,-0.39775 -4.71812,-0.90979 -2.34992,-0.51204 -4.6724,-1.13838 -2.322487,-0.62634 -4.61297,-1.36698 -2.285911,-0.74063 -4.535248,-1.59099 -2.249336,-0.85036 -4.452955,-1.81502 -2.20819,-0.96008 -4.361518,-2.02531 -2.153329,-1.06981 -4.251795,-2.2402 -2.103039,-1.17496 -4.142071,-2.44592 -2.039033,-1.27554 -4.014061,-2.64709 -1.975027,-1.37154 -3.881477,-2.8391 -1.90645,-1.46755 -3.735179,-3.02655 -1.828729,-1.55899 -3.584309,-3.20941 -1.755579,-1.65043 -3.419723,-3.37858 -1.664143,-1.72815 -3.250566,-3.54316 -1.586422,-1.81045 -3.076836,-3.69404 -1.490414,-1.88359 -2.889392,-3.8449 -1.394406,-1.95674 -2.6973753,-3.98206 Q 127.52034,117.68719 174.66955,9.7967501",
            fill: "#feffc9",
            stroke: {
                color: "#cfd0a4",
                width: 20
            }
        });
    },
    "faster": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.beginPath();

        ctx.fillStyle = containerToDraw.getRenderColor("#feffc9");
        ctx.lineWidth = 2.5;
        ctx.strokeStyle = containerToDraw.getRenderColor("#cfd0a4");

        ctx.arc(0, 0, radius, 0, Math.PI * 2);
        ctx.fill();
        ctx.stroke();
    },
    "fang": containerToDraw => {
        loadPathFromSVG({
            containerToDraw,
            pathS: "M 157.99156,187.93825 89.540758,154.98463 q -1.350559,-0.29825 -2.678608,-0.6584 -1.333677,-0.36015 -2.65047,-0.78783 -1.316795,-0.42205 -2.605453,-0.91163 -1.294285,-0.48394 -2.560434,-1.03542 -1.266148,-0.5571 -2.50416,-1.17049 -1.238012,-0.61338 -2.44226,-1.28302 -1.204248,-0.66966 -2.380359,-1.40684 -1.176111,-0.73717 -2.307204,-1.51938 -1.131092,-0.78782 -2.228421,-1.63192 -1.091702,-0.8441 -2.144012,-1.73884 -1.05231,-0.89475 -2.059601,-1.84014 -1.007292,-0.94539 -1.963937,-1.94143 -0.956645,-0.99604 -1.868272,-2.03709 -0.911628,-1.04105 -1.766982,-2.1215 -0.855353,-1.08045 -1.654433,-2.20591 -0.799081,-1.12547 -1.553143,-2.29033 -0.742806,-1.15923 -1.434968,-2.36347 -0.686534,-1.193 -1.316794,-2.41975 -0.63026,-1.23802 -1.192993,-2.49291 -0.568361,-1.26052 -1.074819,-2.54356 -0.50646,-1.28864 -0.945392,-2.59419 -0.444558,-1.31117 -0.821589,-2.64485 -0.377031,-1.32242 -0.686534,-2.67297 -0.309503,-1.34494 -0.557106,-2.70112 -0.241975,-1.36181 -0.422049,-2.72925 -0.174447,-1.37307 -0.286993,-2.75177 -0.112547,-1.37306 -0.151938,-2.75738 -0.04502,-1.3787 -0.01689,-2.757395 0.02251,-1.384322 0.112547,-2.757389 0.09566,-1.384323 0.258856,-2.757391 0.157566,-1.36744 0.388286,-2.729253 0.225093,-1.36744 0.517713,-2.712371 L 45.062367,12.061786 113.51316,45.01541 q 1.35057,0.298249 2.67861,0.658398 1.33368,0.360149 2.65047,0.787826 1.3168,0.42205 2.60546,0.911627 1.29428,0.489577 2.56043,1.041055 1.26615,0.551478 2.50417,1.164857 1.238,0.613378 2.44226,1.28303 1.20424,0.669652 2.38035,1.406832 1.17611,0.737179 2.3072,1.519378 1.1311,0.782198 2.22843,1.631925 1.09733,0.849726 2.14401,1.74447 1.05231,0.889119 2.0596,1.834509 1.00729,0.951018 1.96394,1.941428 0.95664,0.996037 1.86827,2.037093 0.906,1.041055 1.76698,2.121502 0.85536,1.086074 1.65444,2.211539 0.8047,1.125465 1.55314,2.284694 0.7428,1.164857 1.43497,2.363477 0.68653,1.192994 1.31679,2.419751 0.63026,1.238012 1.193,2.492905 0.56835,1.260522 1.07481,2.549179 0.50646,1.283031 0.9454,2.588571 0.44456,1.311167 0.82159,2.644844 0.37703,1.333675 0.68653,2.67298 0.3095,1.339304 0.55711,2.701116 0.24759,1.361813 0.42205,2.734881 0.17444,1.36744 0.28699,2.746135 0.11255,1.373068 0.15193,2.757391 0.045,1.378694 0.0169,2.757387 -0.0225,1.38433 -0.11254,2.76302 -0.0956,1.37869 -0.25886,2.75177 -0.16319,1.37306 -0.38828,2.73487 -0.2251,1.36182 -0.51771,2.71238 z",
            fill: "#9c1010",
            stroke: {
                color: "#7e0d0d",
                width: 20
            }
        });
    },
    "epic_rose": containerToDraw => {
        const { ctx } = containerToDraw;
        const strokeRadius = containerToDraw.radius * 1.1;

        const radius = strokeRadius * 0.7;

        const centerX = 0;
        const centerY = 0;
        const angleOffset = -Math.PI / 2;

        ctx.save();
        ctx.translate(centerX, centerY);

        const points = [];
        for (let i = 0; i < 3; i++) {
            const angle = angleOffset + (i * 2 * Math.PI) / 3;
            points.push({
                x: radius * Math.cos(angle),
                y: radius * Math.sin(angle)
            });
        }

        ctx.fillStyle = containerToDraw.getRenderColor("#ff94c9");
        ctx.strokeStyle = containerToDraw.getRenderColor("#d37ba6");
        ctx.lineWidth = strokeRadius;
        ctx.lineJoin = "round";
        ctx.lineCap = "round";

        ctx.beginPath();
        for (let i = 0; i < 3; i++) {
            const startPoint = points[i];
            const endPoint = points[(i + 1) % 3];
            const controlPoint = points[(i + 2) % 3];

            const startAngle = Math.atan2(
                startPoint.y - controlPoint.y,
                startPoint.x - controlPoint.x
            );
            const endAngle = Math.atan2(
                endPoint.y - controlPoint.y,
                endPoint.x - controlPoint.x
            );

            ctx.arc(
                controlPoint.x,
                controlPoint.y,
                radius * 2 * Math.sin(Math.PI / 3),
                startAngle,
                endAngle,
                false
            );
        }

        ctx.closePath();
        ctx.stroke();
        ctx.fill();

        ctx.strokeStyle = containerToDraw.getRenderColor("#ff94c9");
        ctx.lineWidth = strokeRadius * 0.5;
        ctx.stroke();

        ctx.restore();
    },
    "egg": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.beginPath();

        ctx.fillStyle = containerToDraw.getRenderColor("#fff0b8");
        ctx.lineWidth = 2.5;
        ctx.strokeStyle = containerToDraw.getRenderColor("#cfc295");

        ctx.ellipse(
            0, 0,
            radius * 0.7,
            radius,
            0,
            0, Math.PI * 2
        );
        ctx.fill();
        ctx.stroke();
    },
    "dice": containerToDraw => {
        const { ctx, radius } = containerToDraw;
        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor("#ffffff");
        ctx.strokeStyle = containerToDraw.getRenderColor("#cfcfcf");
        ctx.rect(
            -radius / 2,
            -radius / 2,
            radius,
            radius
        );
        ctx.fill();
        ctx.stroke();

        ctx.beginPath();
        ctx.fillStyle = "#777777";
        ctx.arc(
            0, 0,
            radius * 0.15, 0, P2
        );
        ctx.fill();
    },
    "myt_dice": containerToDraw => {
        const { ctx, radius } = containerToDraw;
        const time = Date.now() / 1000;

        ctx.save();
        ctx.beginPath();

        const rotation = Math.sin(time * 2) * 0.1;
        ctx.rotate(rotation);

        ctx.beginPath();
        const corners = 6;
        const diceRadius = radius * 0.8;

        for (let i = 0; i < corners; i++) {
            const angle = (i / corners) * Math.PI * 2;
            const x = Math.cos(angle) * diceRadius;
            const y = Math.sin(angle) * diceRadius;

            if (i === 0) {
                ctx.moveTo(x, y);
            } else {
                ctx.lineTo(x, y);
            }
        }
        ctx.closePath();

        const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, radius);
        const pulseValue = (Math.sin(time * 3) + 1) / 2; // 0到1之间脉动

        gradient.addColorStop(0, "rgba(100, 0, 0, 1)");
        gradient.addColorStop(0.5, "rgba(80, 0, 50, 1)");
        gradient.addColorStop(1, "rgba(50, 0, 50, 1)");

        ctx.fillStyle = gradient;
        ctx.fill();

        ctx.lineWidth = radius * 0.1;
        ctx.strokeStyle = `rgba(${255 * pulseValue}, 0, 0, 1)`;
        ctx.stroke();

        ctx.fillStyle = `rgba(255, ${50 + pulseValue * 205}, ${pulseValue * 255}, 0.8)`;

        const dotsToShow = Math.floor((time % 6) + 1);

        const dotPositions = [
            [0, 0],
            [-diceRadius * 0.5, -diceRadius * 0.5],
            [diceRadius * 0.5, diceRadius * 0.5],
            [-diceRadius * 0.5, diceRadius * 0.5],
            [diceRadius * 0.5, -diceRadius * 0.5],
            [0, -diceRadius * 0.6],
            [0, diceRadius * 0.6]
        ];

        for (let i = 0; i < dotsToShow; i++) {
            if (i >= dotPositions.length) break;

            const [x, y] = dotPositions[i];
            ctx.beginPath();
            ctx.arc(x, y, radius * 0.12, 0, Math.PI * 2);
            ctx.fill();
        }

        ctx.restore();
    },
    "dandelion": containerToDraw => {
        const { ctx, radius } = containerToDraw;
        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor("#333333");

        ctx.roundRect(
            -radius,
            -radius * 0.3,
            radius,
            radius * 0.6,
            1.5
        );
        ctx.fill();

        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor("#ffffff");
        ctx.strokeStyle = containerToDraw.getRenderColor("#cfcfcf");
        ctx.lineWidth = 2;
        ctx.arc(
            radius * 0.3,
            0,
            radius * 0.6,
            0, P2
        );
        ctx.fill();
        ctx.stroke();
    },
    "corn": containerToDraw => {
        loadPathFromSVG({
            containerToDraw,
            pathS: "M 9.6991664,129.23822 Q 35.501351,-52.012337 146.82071,41.751316 258.14008,135.51497 83.913413,191.74999 84.312943,115.96556 9.6991664,129.23822",
            fill: "#ffe419",
            stroke: {
                color: "#d2b61c",
                width: 20
            }
        });
    },
    "chip": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.beginPath();

        ctx.fillStyle = containerToDraw.getRenderColor("#FFFFFF");
        ctx.lineWidth = 3;
        ctx.strokeStyle = containerToDraw.getRenderColor("#CFCFCF");

        ctx.arc(0, 0, radius, 0, Math.PI * 2);
        ctx.fill();
        ctx.stroke();

        ctx.save();

        for (let i = 0; i < 6; i++) {
            ctx.beginPath();

            ctx.fillStyle = containerToDraw.getRenderColor("#465fcf");

            ctx.rect(
                radius * 0.7,
                -radius * 0.2,
                radius * 0.2,
                radius * 0.4
            );

            ctx.fill();

            ctx.rotate(P2 / 6);
        }

        ctx.restore();

        ctx.save();

        for (let i = 0; i < 10; i++) {
            ctx.beginPath();

            ctx.fillStyle = containerToDraw.getRenderColor("#465fcf");

            ctx.rect(
                radius * 0.45,
                -radius * 0.075,
                radius * 0.1,
                radius * 0.15
            );

            ctx.fill();

            ctx.rotate(P2 / 10);
        }

        ctx.restore();
    },
    "cactus": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.lineCap = "round";
        ctx.lineJoin = "round";

        loadPathFromSVG({
            containerToDraw,
            pathS: "m 190.9104,100.00044 q -28.83584,25.7134 -26.62977,64.28139 Q 125.71264,162.07576 99.999241,190.9116 74.290071,162.07576 35.717846,164.28183 37.923913,125.71384 9.0880745,100.00044 37.923913,74.291273 35.717846,35.719044 74.285831,37.925111 99.999241,9.0935154 125.7084,37.925111 164.28063,35.719044 162.07456,74.287031 190.9104,100.00044",
            fill: "#38c75f",
            stroke: {
                width: 20,
                color: "#2da14d"
            }
        });

        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor("#74d68f");
        ctx.arc(
            0, 0,
            radius * 0.5, 0, P2
        );

        ctx.fill();
    },
    "poison_cactus": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.lineCap = "round";
        ctx.lineJoin = "round";

        loadPathFromSVG({
            containerToDraw,
            pathS: "m 190.9104,100.00044 q -28.83584,25.7134 -26.62977,64.28139 Q 125.71264,162.07576 99.999241,190.9116 74.290071,162.07576 35.717846,164.28183 37.923913,125.71384 9.0880745,100.00044 37.923913,74.291273 35.717846,35.719044 74.285831,37.925111 99.999241,9.0935154 125.7084,37.925111 164.28063,35.719044 162.07456,74.287031 190.9104,100.00044",
            fill: "#b03ac8",
            stroke: {
                width: 20,
                color: "#9d2fae"
            }
        });

        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor("#bf75d4");
        ctx.arc(
            0, 0,
            radius * 0.5, 0, P2
        );

        ctx.fill();
    },
    "bubble": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor("#ffffff");
        ctx.strokeStyle = containerToDraw.getRenderColor("#ffffff");
        ctx.lineWidth = 4;
        ctx.globalAlpha = containerToDraw.getAlpha(0.3);
        ctx.arc(
            0, 0,
            radius, 0, P2
        );
        ctx.fill();

        ctx.globalAlpha = containerToDraw.getAlpha(0.5);
        ctx.stroke();

        ctx.globalAlpha = containerToDraw.getAlpha(0.6);
        ctx.beginPath();
        ctx.arc(
            radius * 0.4, -radius * 0.4,
            radius * 0.4, 0, P2
        );
        ctx.fill();

        ctx.globalAlpha = 1;
    },
    "bone": containerToDraw => {
        loadPathFromSVG({
            containerToDraw,
            pathS: "m 103.21408,40.875459 q 9.9628,51.723596 52.84818,82.306401 l -7.82684,10.97418 0.2302,-13.47621 q 20.17469,0.3472 29.76767,13.46489 8.89105,12.16294 4.14362,27.23169 -4.6795,14.84609 -18.43875,19.73693 -15.52916,5.52106 -30.6545,-6.66452 l 8.45706,-10.49869 13.06109,-3.32093 q 4.78894,18.82744 -6.69093,30.64696 -10.17414,10.47605 -25.62405,8.55518 -15.67633,-1.95482 -23.035217,-15.10271 -7.936289,-14.18191 0.143395,-32.66971 l 12.347852,5.39651 -13.234693,2.55109 Q 88.745361,108.28293 45.85999,77.700121 L 53.686835,66.729708 53.456633,80.202144 Q 33.281942,79.854956 23.688963,66.737255 14.797909,54.574324 19.545339,39.505573 24.224842,24.659476 37.984086,19.768642 53.51324,14.247584 68.638597,26.436931 L 60.18153,36.928073 47.120437,40.24901 Q 42.331495,21.425336 53.81137,9.6058188 63.985512,-0.87022663 79.435416,1.0544063 95.111751,3.0054568 102.47065,16.149575 q 7.93627,14.185683 -0.14341,32.67349 L 89.97939,43.426542 Z m -26.469378,5.098393 q -0.3887,-2.007657 -0.162273,-4.037957 0.226428,-2.034074 1.045341,-3.905874 2.71713,-6.215436 1.320827,-8.713686 -0.698152,-1.245352 -2.849213,-1.513291 -2.124644,-0.264165 -2.951105,0.581164 -0.977412,1.007603 0.09435,5.222928 0.3887,1.520838 0.415118,3.09451 0.02642,1.566123 -0.309451,3.098282 -0.332095,1.535935 -1.011377,2.951106 -0.679283,1.415172 -1.660468,2.637881 -0.415117,0.513235 -0.879294,0.984959 -0.464176,0.471724 -0.973639,0.898163 -0.509461,0.426438 -1.056661,0.796269 -0.543426,0.37738 -1.12459,0.690605 -0.581164,0.316998 -1.192518,0.57739 -0.607581,0.260392 -1.241577,0.452855 -0.630223,0.200011 -1.279316,0.339641 -0.649092,0.132083 -1.305731,0.203784 -0.660415,0.06793 -1.320828,0.07548 -0.660414,0.0075 -1.320827,-0.05283 -0.660413,-0.06038 -1.309506,-0.181143 -0.652866,-0.124534 -1.286863,-0.313224 -0.633998,-0.184916 -1.249126,-0.433986 -0.615128,-0.245296 -1.200065,-0.554747 -0.588712,-0.301903 -1.143459,-0.667962 -0.550974,-0.362283 -1.067983,-0.777401 -3.388865,-2.732225 -4.709693,-2.260501 -1.113268,0.396249 -1.758586,2.441643 -0.649093,2.064264 0.192463,3.219045 1.690659,2.30956 8.468389,2.426548 2.045395,0.03397 3.988898,0.675508 1.943503,0.641546 3.607745,1.826517 51.663196,36.84353 63.663856,99.152602 0.38871,2.00766 0.16228,4.03796 -0.22642,2.03784 -1.04535,3.90964 -2.71712,6.21544 -1.32082,8.70992 0.69815,1.24534 2.84922,1.51329 2.12464,0.26416 2.9511,-0.58117 0.97742,-1.0076 -0.0944,-5.22293 -0.3887,-1.52083 -0.41512,-3.09073 -0.0265,-1.56991 0.30946,-3.10206 0.33587,-1.53216 1.01137,-2.94733 0.67929,-1.41895 1.66047,-2.64166 0.41511,-0.51323 0.87929,-0.98496 0.46418,-0.47172 0.97365,-0.89816 0.50945,-0.42644 1.05665,-0.79627 0.54343,-0.3736 1.1246,-0.69061 0.58116,-0.31699 1.19251,-0.57738 0.61136,-0.26039 1.24158,-0.45285 0.63022,-0.20002 1.27932,-0.33588 0.64909,-0.13585 1.30573,-0.20378 0.65664,-0.0679 1.32083,-0.0754 0.66041,-0.008 1.32082,0.0491 0.66042,0.0604 1.3095,0.18491 0.65287,0.12076 1.28687,0.30946 0.634,0.18869 1.24912,0.43398 0.61513,0.2453 1.20007,0.55475 0.58871,0.30568 1.14346,0.66797 0.55098,0.36227 1.06798,0.7774 3.38887,2.73222 4.7097,2.26427 1.11326,-0.40003 1.75859,-2.44542 0.64908,-2.06426 -0.19248,-3.21905 -1.69064,-2.30955 -8.46838,-2.42276 -2.04539,-0.0377 -3.9889,-0.67929 -1.9435,-0.64154 -3.60774,-1.82652 Q 88.745361,108.28293 76.744702,45.973852",
            fill: "#cfcfcf"
        });
        loadPathFromSVG({
            containerToDraw,
            pathS: "m 89.97939,43.426542 q 10.98174,57.014448 58.25603,90.725728 c 38.87006,0.66796 20.05392,51.18772 -6.4947,29.79409 8.40424,33.04709 -45.364752,29.13367 -29.79786,-6.49093 Q 100.96113,100.44099 53.686835,66.729708 C 14.816778,66.057972 33.632904,15.538221 60.18153,36.931847 51.777296,3.8847504 105.54628,7.8019463 89.97939,43.422768",
            fill: "#ffffff"
        });
    },
    "blood_stinger": containerToDraw => {
        loadPathFromSVG({
            containerToDraw,
            pathS: "m 169.43507,100.00194 q -74.064074,32.06974 -138.870134,80.17434 9.25801,-80.17434 0,-160.348676 64.80606,48.104611 138.870134,80.174336",
            fill: "#9c1010",
            stroke: {
                width: 40,
                color: "#7e0d0d"
            }
        });
    },
    "antennae": containerToDraw => {
        loadPathFromSVG({
            containerToDraw,
            pathS: "m 60.348807,176.48637 q 0.224848,0.67878 0.551515,1.30666 0.326666,0.63637 0.750908,1.20485 0.42,0.57273 0.924848,1.07333 0.509091,0.50061 1.081818,0.91637 0.576969,0.41575 1.213332,0.73818 0.636363,0.32242 1.310908,0.53879 0.674545,0.21636 1.378787,0.3309 0.704247,0.11455 1.412727,0.11031 0.44545,0 0.89091,-0.0424 0.44545,-0.0424 0.88242,-0.13151 0.43697,-0.0891 0.86546,-0.22061 0.42424,-0.12727 0.84,-0.29697 0.41151,-0.16969 0.80606,-0.38182 0.39454,-0.21212 0.76363,-0.45818 0.36909,-0.24606 0.72121,-0.53454 0.3394,-0.28 0.65758,-0.59394 0.31818,-0.31394 0.60242,-0.66606 0.28424,-0.35212 0.5303,-0.71697 0.24606,-0.36909 0.45819,-0.76364 0.21212,-0.39454 0.38181,-0.80606 0.1697,-0.41151 0.29697,-0.84 0.13152,-0.42424 0.22061,-0.86545 0.0891,-0.44121 0.12727,-0.88242 0.0382,-0.44122 0.0467,-0.89091 0,-94.673869 -63.267231,-157.945342 Q 14.29311,15.168332 13.720383,14.748333 13.143414,14.332575 12.511293,14.005909 11.87493,13.683485 11.200385,13.462879 10.52584,13.242273 9.8258412,13.123485 9.1258411,13.004697 8.4131141,13.00894 q -0.712726,0 -1.416968,0.101818 -0.7,0.110303 -1.378787,0.322424 -0.678788,0.212121 -1.315151,0.534545 -0.398788,0.199394 -0.776363,0.436969 -0.381818,0.237576 -0.729697,0.509091 -0.356363,0.275757 -0.678787,0.585454 -0.322424,0.305455 -0.615151,0.644848 -0.29697,0.339394 -0.55151497,0.7 -0.258788,0.364848 -0.479394,0.755151 -0.22060503,0.381818 -0.40303003,0.793333 -0.182424,0.407272 -0.322424,0.831514 -0.144242,0.424242 -0.241818,0.861212 -0.09757,0.432727 -0.156969,0.878181 -0.05515,0.441212 -0.06788,0.890908 -0.0085,0.445455 0.02121,0.890909 0.0297,0.445454 0.106061,0.882424 0.07636,0.436969 0.195151,0.873938 0.118788,0.43697 0.275757,0.848485 0.15697,0.411514 0.360606,0.814545 Q 30.253097,86.194951 60.353076,176.49064 m 77.852674,-0.004 q -0.22484,0.67878 -0.55151,1.30666 -0.32667,0.63637 -0.75091,1.20485 -0.42,0.57273 -0.92485,1.07333 -0.50909,0.50061 -1.08181,0.91637 -0.57697,0.41575 -1.21334,0.73818 -0.63636,0.32242 -1.31091,0.53879 -0.67454,0.21636 -1.37878,0.3309 -0.70424,0.11455 -1.41273,0.11031 -0.44545,0 -0.89091,-0.0424 -0.44545,-0.0424 -0.88242,-0.13151 -0.43697,-0.0891 -0.86545,-0.22061 -0.42425,-0.12727 -0.84,-0.29697 -0.41152,-0.16969 -0.80606,-0.38182 -0.39455,-0.21212 -0.76364,-0.45818 -0.36909,-0.24606 -0.72121,-0.53454 -0.3394,-0.28 -0.65758,-0.59394 -0.31818,-0.31394 -0.60242,-0.66606 -0.28424,-0.35212 -0.5303,-0.71697 -0.24606,-0.36909 -0.45818,-0.76364 -0.21213,-0.39454 -0.38182,-0.80606 -0.1697,-0.41151 -0.29697,-0.84 -0.13152,-0.42424 -0.22061,-0.86545 -0.0891,-0.44121 -0.12727,-0.88242 -0.0382,-0.44122 -0.0467,-0.89091 0,-94.673869 63.26723,-157.945342 0.50485,-0.500606 1.07758,-0.920605 0.57697,-0.415758 1.20909,-0.742424 0.63636,-0.322424 1.31091,-0.54303 0.67454,-0.220606 1.37454,-0.339394 0.7,-0.118788 1.41273,-0.114545 0.71272,0 1.41697,0.101818 0.7,0.110303 1.37878,0.322424 0.67879,0.212121 1.31515,0.534545 0.39879,0.199394 0.77637,0.436969 0.38181,0.237576 0.72969,0.509091 0.35637,0.275757 0.67879,0.585454 0.32242,0.305455 0.61515,0.644848 0.29697,0.339394 0.55152,0.7 0.25878,0.364848 0.47939,0.755151 0.22061,0.381818 0.40303,0.793333 0.18242,0.407272 0.32242,0.831514 0.14425,0.424242 0.24182,0.861212 0.0976,0.432727 0.15697,0.878181 0.0551,0.441212 0.0679,0.890908 0.008,0.445455 -0.0212,0.890909 -0.0297,0.445454 -0.10606,0.882424 -0.0764,0.436969 -0.19515,0.873938 -0.11879,0.43697 -0.27576,0.848485 -0.15697,0.411514 -0.36061,0.814545 -30.01513,60.030262 -60.11511,150.325951",
            fill: "#000000",
            stroke: {
                width: 5,
                color: "#111111"
            }
        });
    },
    "cutter": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        const spikeCount = 8;
        const outerRadius = radius * 1;
        const innerRadius = radius * 1;
        const spikeLength = radius * 0.4;

        const rotationSpeed = 5;
        const currentTime = Date.now();
        const elapsedTime = (currentTime - containerToDraw.createdTime) / 1000;
        const rotation = (elapsedTime * rotationSpeed) % (Math.PI * 2);

        ctx.save();
        ctx.rotate(rotation);

        ctx.fillStyle = containerToDraw.getRenderColor("#000000");

        ctx.beginPath();

        const firstSpikeX = (outerRadius + spikeLength) * Math.cos(0.5 / spikeCount * P2);
        const firstSpikeY = (outerRadius + spikeLength) * Math.sin(0.5 / spikeCount * P2);

        ctx.moveTo(firstSpikeX, firstSpikeY);

        for (let i = 0; i < spikeCount; i++) {
            const currentAngle = ((i + 0.5) / spikeCount) * P2;
            const nextAngle = ((i + 1.5) / spikeCount) * P2;

            const spikeX = (outerRadius + spikeLength) * Math.cos(currentAngle);
            const spikeY = (outerRadius + spikeLength) * Math.sin(currentAngle);

            const arcX = outerRadius * Math.cos((i + 1) / spikeCount * P2);
            const arcY = outerRadius * Math.sin((i + 1) / spikeCount * P2);

            const nextSpikeX = (outerRadius + spikeLength) * Math.cos(nextAngle);
            const nextSpikeY = (outerRadius + spikeLength) * Math.sin(nextAngle);

            ctx.quadraticCurveTo(arcX, arcY, nextSpikeX, nextSpikeY);
        }

        ctx.arc(0, 0, innerRadius, 0, P2, true);

        ctx.closePath();
        ctx.fill();

        ctx.restore();
    },
    "smasher": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        const sides = 6;
        const outerRadius = radius * 1.2;
        const innerRadius = radius * 1;

        const rotationSpeed = 3;
        const currentTime = Date.now();
        const elapsedTime = (currentTime - containerToDraw.createdTime) / 1000;
        const rotation = (elapsedTime * rotationSpeed) % (Math.PI * 2);

        ctx.save();
        ctx.rotate(rotation);

        ctx.fillStyle = containerToDraw.getRenderColor("#444444");
        ctx.strokeStyle = containerToDraw.getRenderColor("#000000");
        ctx.lineWidth = radius * 0.075;

        ctx.beginPath();
        for (let i = 0; i < sides; i++) {
            const angle = (i / sides) * P2;
            const x = outerRadius * Math.cos(angle);
            const y = outerRadius * Math.sin(angle);

            if (i === 0) {
                ctx.moveTo(x, y);
            } else {
                ctx.lineTo(x, y);
            }
        }
        ctx.closePath();

        ctx.arc(0, 0, innerRadius, 0, P2, true);
        ctx.closePath();

        ctx.fill();
        ctx.stroke();
        ctx.restore();
    },
    "myt_cactus": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        ctx.lineCap = "round";
        ctx.lineJoin = "round";
        const innercolor = "#19b1b4";
        const outercolor = "#00878a";

        loadPathFromSVG({
            containerToDraw,
            pathS: "m 190.9104,100.00044 q -28.83584,25.7134 -26.62977,64.28139 Q 125.71264,162.07576 99.999241,190.9116 74.290071,162.07576 35.717846,164.28183 37.923913,125.71384 9.0880745,100.00044 37.923913,74.291273 35.717846,35.719044 74.285831,37.925111 99.999241,9.0935154 125.7084,37.925111 164.28063,35.719044 162.07456,74.287031 190.9104,100.00044",
            fill: outercolor,
            stroke: {
                width: 20,
                color: strokeColor(outercolor)
            }
        });

        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor(innercolor);
        ctx.arc(
            0, 0,
            radius * 0.5, 0, P2
        );
        ctx.fill();

        ctx.beginPath();
        ctx.fillStyle = containerToDraw.getRenderColor("#1ed3cb");
        ctx.lineWidth = radius / 3;
        ctx.arc(0, 0, radius * 0.25, 0, Math.PI * 2);
        ctx.fill();
    },
    "disc": containerToDraw => {
        const { ctx, radius } = containerToDraw;

        const outerRadius = radius * 1.1;
        const innerRadius = radius * 0.9;

        ctx.save();

        ctx.beginPath();
        ctx.arc(0, 0, outerRadius, 0, P2);
        ctx.arc(0, 0, innerRadius, 0, P2, true);
        ctx.closePath();

        ctx.fillStyle = containerToDraw.getRenderColor("#000000");
        ctx.fill();
    },
    "default": containerToDraw => {
        petalAssets.basic(containerToDraw);
    }
};
